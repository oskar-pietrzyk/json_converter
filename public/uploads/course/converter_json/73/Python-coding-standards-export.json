{"id":103,"title":"Python coding standards","estimated_time":12,"user_id":null,"passing_threshold":0,"published_at":"2021-04-15T16:43:28.544+02:00","has_unpublished_changes":false,"has_certificate":false,"external_id":null,"draft_external_id":null,"external_status":"inapplicable","course_type":"bridge","enrollments_count":26,"domain_id":1,"sub_account_id":1,"open_book":true,"description":null,"third_party_course_id":null,"external_course_id":null,"quizzes_count":3,"external_status_message":null,"manual_estimated_time":false,"show_correct_response":true,"max_quiz_attempts":null,"continuing_education_credits":null,"archived_at":null,"config":{},"unpublished_at":null,"external_learning_standard":null,"available_offline":false,"external_version":null,"ordered_slides":[{"id":971,"position":1,"new_position":1,"published_attributes":{"type":"cover","answers":[],"title":null,"body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{"heading":"PYTHON CODING STANDARDS","intro":"How we roll in Python in Netguru","background_image_url":"https://instructure-bridge-dub-prod.s3-eu-west-1.amazonaws.com/512/1/uploads/97b3f46c-d483-48de-8712-f30246e80ed3.jpeg","background_image_opacity":0.5}},"draft_attributes":{"type":"cover","answers":[],"title":null,"body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{"heading":"PYTHON CODING STANDARDS","intro":"How we roll in Python in Netguru","background_image_url":"https://instructure-bridge-dub-prod.s3-eu-west-1.amazonaws.com/512/1/uploads/97b3f46c-d483-48de-8712-f30246e80ed3.jpeg","background_image_opacity":0.5}},"published_at":"2021-04-15T16:43:28.544+02:00","estimated_time":0,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1615,"position":2,"new_position":2,"published_attributes":{"type":"slide","answers":[],"title":"Course overview","body":null,"serialized_body":"\u003cp\u003eIn this course we\u0026#x27;ll share some standards that we would like any Netguru Python developer to stick to. If you are up to date with Python, most probably you know most of them, but still it\u0026#x27;s worth to read it and refresh your knowledge.\u003c/p\u003e\u003cp\u003eGet ready!\u003c/p\u003e","structured_body":{"blocks":[{"key":"2uoqr","text":"In this course we'll share some standards that we would like any Netguru Python developer to stick to. If you are up to date with Python, most probably you know most of them, but still it's worth to read it and refresh your knowledge.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"entityRefreshHax":1}},{"key":"c5nm6","text":"Get ready!","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{},"allow_comments":false},"draft_attributes":{"type":"slide","answers":[],"title":"Course overview","body":null,"serialized_body":"\u003cp\u003eIn this course we\u0026#x27;ll share some standards that we would like any Netguru Python developer to stick to. If you are up to date with Python, most probably you know most of them, but still it\u0026#x27;s worth to read it and refresh your knowledge.\u003c/p\u003e\u003cp\u003eGet ready!\u003c/p\u003e","structured_body":{"blocks":[{"key":"2uoqr","text":"In this course we'll share some standards that we would like any Netguru Python developer to stick to. If you are up to date with Python, most probably you know most of them, but still it's worth to read it and refresh your knowledge.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"entityRefreshHax":1}},{"key":"c5nm6","text":"Get ready!","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{},"allow_comments":false},"published_at":"2021-04-15T16:43:28.544+02:00","estimated_time":1,"attachments_count":2,"presentable":true,"external_id":null,"attachments":[{"id":2947,"notorious_id":null,"location":"https://s3-eu-west-1.amazonaws.com/bridge-learn-file-store-prod-dub/512/1/uploads/337f9ae2-b746-4e97-846a-88a73efe78cb.png","duration":null,"name":"5848152fcef1014c0b5e4967.png","learner_visible":true,"confirmed":false,"user_id":633,"context_type":"Slide","content_type":"image/png","file_modified_at":null,"availability":"complete","media":null,"migrated_at":null,"sources":[]},{"id":2946,"notorious_id":null,"location":"https://s3-eu-west-1.amazonaws.com/bridge-learn-file-store-prod-dub/512/1/uploads/4338699b-3155-4366-9d8f-a045ad172f81.png","duration":null,"name":"5848152fcef1014c0b5e4967.png","learner_visible":true,"confirmed":false,"user_id":633,"context_type":"Slide","content_type":"image/png","file_modified_at":null,"availability":"complete","media":null,"migrated_at":null,"sources":[]}]},{"id":1616,"position":3,"new_position":3,"published_attributes":{"type":"slide","answers":[],"title":"Table of Contents","body":null,"serialized_body":"\u003col\u003e\u003cli\u003eGeneral rules\u003c/li\u003e\u003cli\u003eThe list of bugs which cannot get into tester\u0026#x27;s hands\u003c/li\u003e\u003cli\u003eDevelopment checks\u003c/li\u003e\u003cli\u003eLinters\u003c/li\u003e\u003cli\u003eStatic typing\u003c/li\u003e\u003cli\u003eQuiz time!\u003c/li\u003e\u003c/ol\u003e","structured_body":{"blocks":[{"key":"cn94g","text":"General rules","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"38pet","text":"The list of bugs which cannot get into tester's hands","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eo4jg","text":"Development checks","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"951h5","text":"Linters","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"jl42","text":"Static typing","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1sh9f","text":"Quiz time!","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Table of Contents","body":null,"serialized_body":"\u003col\u003e\u003cli\u003eGeneral rules\u003c/li\u003e\u003cli\u003eThe list of bugs which cannot get into tester\u0026#x27;s hands\u003c/li\u003e\u003cli\u003eDevelopment checks\u003c/li\u003e\u003cli\u003eLinters\u003c/li\u003e\u003cli\u003eStatic typing\u003c/li\u003e\u003cli\u003eQuiz time!\u003c/li\u003e\u003c/ol\u003e","structured_body":{"blocks":[{"key":"cn94g","text":"General rules","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"38pet","text":"The list of bugs which cannot get into tester's hands","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eo4jg","text":"Development checks","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"951h5","text":"Linters","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"jl42","text":"Static typing","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1sh9f","text":"Quiz time!","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-15T16:43:28.544+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":970,"position":4,"new_position":4,"published_attributes":{"type":"slide","title":"General rules","body":null,"serialized_body":"\u003cul\u003e\u003cli\u003eUse class based views in Django, especially generic views when itâ€™s possible. The same applies to forms and API endpoints.\u003c/li\u003e\u003cli\u003eCreate templates that extends some basic template - keep it DRY as much as possible.\u003c/li\u003e\u003cli\u003eComply with the rules of \u003ca href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\"\u003ePEP8\u003c/a\u003e.\u003c/li\u003e\u003cli\u003eUse generators.\u003c/li\u003e\u003cli\u003eRemember to parametrize \u003cem\u003esettings.py\u003c/em\u003e file by usage of environment variables.\u003c/li\u003e\u003cli\u003eRemember to add all dependencies you are using in \u003cem\u003erequirements.txt\u003c/em\u003e file.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eDo not\u003c/strong\u003e delete migrations that were already applied on existing instances on staging or production.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eDo not\u003c/strong\u003e add any data to the repository that could compromise security, for example login credentials or API KEYS\u003c/li\u003e\u003cli\u003eMake sure \u003ca href=\"http://readme.md/\" rel=\"nofollow\"\u003e\u003cem\u003eREADME.md\u003c/em\u003e\u003c/a\u003e and \u003cem\u003e.gitignore\u003c/em\u003e are up to date and no unnecessary files are in repository.\u003c/li\u003e\u003cli\u003eYou can generate \u003cem\u003e.gitignore\u003c/em\u003e file here: \u003ca href=\"https://www.gitignore.io/\" rel=\"nofollow\"\u003ehttps://www.gitignore.io/\u003c/a\u003e\u003c/li\u003e\u003cli\u003eRemember to write unit tests and documentation for code. One of the good test framework is called \u003ca href=\"https://docs.pytest.org/en/latest/getting-started.html\" rel=\"nofollow\"\u003ePyTest\u003c/a\u003e. It\u0026#x27;s possible to use it with raw Python code as well as with Django framework (instructions can be found \u003ca href=\"https://pytest-django.readthedocs.io/en/latest/\" rel=\"nofollow\"\u003ehere\u003c/a\u003e).\u003c/li\u003e\u003cli\u003eRemember to add logging of important operations or connections with external API, especially in case something during execution went wrong.\u003c/li\u003e\u003c/ul\u003e","structured_body":{"blocks":[{"key":"bnjs3","text":"Use class based views in Django, especially generic views when itâ€™s possible. The same applies to forms and API endpoints.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6uceq","text":"Create templates that extends some basic template - keep it DRY as much as possible.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8n8te","text":"Comply with the rules of PEP8.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":25,"length":4,"key":0}],"data":{}},{"key":"as72o","text":"Use generators.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6u9o6","text":"Remember to parametrize settings.py file by usage of environment variables.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":24,"length":11,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"5ff63","text":"Remember to add all dependencies you are using in requirements.txt file.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":50,"length":16,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"6a1d6","text":"Do not delete migrations that were already applied on existing instances on staging or production.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"32llu","text":"Do not add any data to the repository that could compromise security, for example login credentials or API KEYS","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1lgru","text":"Make sure README.md and .gitignore are up to date and no unnecessary files are in repository.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":10,"length":9,"style":"ITALIC"},{"offset":24,"length":10,"style":"ITALIC"}],"entityRanges":[{"offset":10,"length":9,"key":1}],"data":{}},{"key":"dbdh1","text":"You can generate .gitignore file here: https://www.gitignore.io/","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":17,"length":10,"style":"ITALIC"}],"entityRanges":[{"offset":39,"length":25,"key":2}],"data":{}},{"key":"24n9v","text":"Remember to write unit tests and documentation for code. One of the good test framework is called PyTest. It's possible to use it with raw Python code as well as with Django framework (instructions can be found here).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":98,"length":6,"key":3},{"offset":211,"length":4,"key":4}],"data":{}},{"key":"4t3e7","text":"Remember to add logging of important operations or connections with external API, especially in case something during execution went wrong.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.python.org/dev/peps/pep-0008/","rel":"nofollow","url":"https://www.python.org/dev/peps/pep-0008/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"http://readme.md/","rel":"nofollow","url":"http://readme.md/"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.gitignore.io/","rel":"nofollow","url":"https://www.gitignore.io/"}},"3":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://docs.pytest.org/en/latest/getting-started.html","rel":"nofollow","url":"https://docs.pytest.org/en/latest/getting-started.html"}},"4":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://pytest-django.readthedocs.io/en/latest/","rel":"nofollow","url":"https://pytest-django.readthedocs.io/en/latest/"}}}},"answers":[],"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","title":"General rules","body":null,"serialized_body":"\u003cul\u003e\u003cli\u003eUse class based views in Django, especially generic views when itâ€™s possible. The same applies to forms and API endpoints.\u003c/li\u003e\u003cli\u003eCreate templates that extends some basic template - keep it DRY as much as possible.\u003c/li\u003e\u003cli\u003eComply with the rules of \u003ca href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\"\u003ePEP8\u003c/a\u003e.\u003c/li\u003e\u003cli\u003eUse generators.\u003c/li\u003e\u003cli\u003eRemember to parametrize \u003cem\u003esettings.py\u003c/em\u003e file by usage of environment variables.\u003c/li\u003e\u003cli\u003eRemember to add all dependencies you are using in \u003cem\u003erequirements.txt\u003c/em\u003e file.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eDo not\u003c/strong\u003e delete migrations that were already applied on existing instances on staging or production.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eDo not\u003c/strong\u003e add any data to the repository that could compromise security, for example login credentials or API KEYS\u003c/li\u003e\u003cli\u003eMake sure \u003ca href=\"http://readme.md/\" rel=\"nofollow\"\u003e\u003cem\u003eREADME.md\u003c/em\u003e\u003c/a\u003e and \u003cem\u003e.gitignore\u003c/em\u003e are up to date and no unnecessary files are in repository.\u003c/li\u003e\u003cli\u003eYou can generate \u003cem\u003e.gitignore\u003c/em\u003e file here: \u003ca href=\"https://www.gitignore.io/\" rel=\"nofollow\"\u003ehttps://www.gitignore.io/\u003c/a\u003e\u003c/li\u003e\u003cli\u003eRemember to write unit tests and documentation for code. One of the good test framework is called \u003ca href=\"https://docs.pytest.org/en/latest/getting-started.html\" rel=\"nofollow\"\u003ePyTest\u003c/a\u003e. It\u0026#x27;s possible to use it with raw Python code as well as with Django framework (instructions can be found \u003ca href=\"https://pytest-django.readthedocs.io/en/latest/\" rel=\"nofollow\"\u003ehere\u003c/a\u003e).\u003c/li\u003e\u003cli\u003eRemember to add logging of important operations or connections with external API, especially in case something during execution went wrong.\u003c/li\u003e\u003c/ul\u003e","structured_body":{"blocks":[{"key":"bnjs3","text":"Use class based views in Django, especially generic views when itâ€™s possible. The same applies to forms and API endpoints.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6uceq","text":"Create templates that extends some basic template - keep it DRY as much as possible.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8n8te","text":"Comply with the rules of PEP8.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":25,"length":4,"key":0}],"data":{}},{"key":"as72o","text":"Use generators.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6u9o6","text":"Remember to parametrize settings.py file by usage of environment variables.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":24,"length":11,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"5ff63","text":"Remember to add all dependencies you are using in requirements.txt file.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":50,"length":16,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"6a1d6","text":"Do not delete migrations that were already applied on existing instances on staging or production.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"32llu","text":"Do not add any data to the repository that could compromise security, for example login credentials or API KEYS","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1lgru","text":"Make sure README.md and .gitignore are up to date and no unnecessary files are in repository.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":10,"length":9,"style":"ITALIC"},{"offset":24,"length":10,"style":"ITALIC"}],"entityRanges":[{"offset":10,"length":9,"key":1}],"data":{}},{"key":"dbdh1","text":"You can generate .gitignore file here: https://www.gitignore.io/","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":17,"length":10,"style":"ITALIC"}],"entityRanges":[{"offset":39,"length":25,"key":2}],"data":{}},{"key":"24n9v","text":"Remember to write unit tests and documentation for code. One of the good test framework is called PyTest. It's possible to use it with raw Python code as well as with Django framework (instructions can be found here).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":98,"length":6,"key":3},{"offset":211,"length":4,"key":4}],"data":{}},{"key":"4t3e7","text":"Remember to add logging of important operations or connections with external API, especially in case something during execution went wrong.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.python.org/dev/peps/pep-0008/","rel":"nofollow","url":"https://www.python.org/dev/peps/pep-0008/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"http://readme.md/","rel":"nofollow","url":"http://readme.md/"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.gitignore.io/","rel":"nofollow","url":"https://www.gitignore.io/"}},"3":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://docs.pytest.org/en/latest/getting-started.html","rel":"nofollow","url":"https://docs.pytest.org/en/latest/getting-started.html"}},"4":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://pytest-django.readthedocs.io/en/latest/","rel":"nofollow","url":"https://pytest-django.readthedocs.io/en/latest/"}}}},"answers":[],"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-15T16:43:28.544+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1236,"position":5,"new_position":5,"published_attributes":{"type":"slide","answers":[],"title":"The list of bugs which cannot get into testerâ€™s hands","body":null,"serialized_body":"\u003cul\u003e\u003cli\u003ebackend field validation\u003c/li\u003e\u003cli\u003euploading files with special characters (f.e. an image or a PDF file)\u003c/li\u003e\u003cli\u003eincorrect error codes\u003c/li\u003e\u003cli\u003edifferent date formats\u003c/li\u003e\u003cli\u003eproblem with user authorisation (user A has an access to resources of user B)\u003c/li\u003e\u003cli\u003eincorrect links after changing environment (f.e. we get an activation link: project.dev/activate/{code} on a production version of application)\u003c/li\u003e\u003cli\u003eincorrect types returned for keywords in JSON\u003c/li\u003e\u003c/ul\u003e","structured_body":{"blocks":[{"key":"bnh42","text":"backend field validation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ab46a","text":"uploading files with special characters (f.e. an image or a PDF file)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fkc51","text":"incorrect error codes","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4eod4","text":"different date formats","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"574p9","text":"problem with user authorisation (user A has an access to resources of user B)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4icig","text":"incorrect links after changing environment (f.e. we get an activation link: project.dev/activate/{code} on a production version of application)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6oj2i","text":"incorrect types returned for keywords in JSON","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"The list of bugs which cannot get into testerâ€™s hands","body":null,"serialized_body":"\u003cul\u003e\u003cli\u003ebackend field validation\u003c/li\u003e\u003cli\u003euploading files with special characters (f.e. an image or a PDF file)\u003c/li\u003e\u003cli\u003eincorrect error codes\u003c/li\u003e\u003cli\u003edifferent date formats\u003c/li\u003e\u003cli\u003eproblem with user authorisation (user A has an access to resources of user B)\u003c/li\u003e\u003cli\u003eincorrect links after changing environment (f.e. we get an activation link: project.dev/activate/{code} on a production version of application)\u003c/li\u003e\u003cli\u003eincorrect types returned for keywords in JSON\u003c/li\u003e\u003c/ul\u003e","structured_body":{"blocks":[{"key":"bnh42","text":"backend field validation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ab46a","text":"uploading files with special characters (f.e. an image or a PDF file)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fkc51","text":"incorrect error codes","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4eod4","text":"different date formats","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"574p9","text":"problem with user authorisation (user A has an access to resources of user B)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4icig","text":"incorrect links after changing environment (f.e. we get an activation link: project.dev/activate/{code} on a production version of application)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6oj2i","text":"incorrect types returned for keywords in JSON","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-15T16:43:28.544+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1239,"position":6,"new_position":6,"published_attributes":{"type":"slide","answers":[],"title":"Development checks","body":null,"serialized_body":"\u003cp\u003eThese checks should be done during code review. Additional checks should also be done before production release.\u003c/p\u003e\u003cul\u003e\u003cli\u003eCritical checks:\u003cul\u003e\u003cli\u003ebackend validation for critical data,\u003c/li\u003e\u003cli\u003eendpoints correct authorization and authentication settings,\u003c/li\u003e\u003cli\u003eup to date \u003cem\u003erequirements.txt\u003c/em\u003e file,\u003c/li\u003e\u003cli\u003econsistent and working migrations,\u003c/li\u003e\u003cli\u003epassing CI linters checks,\u003c/li\u003e\u003cli\u003epassing unit tests.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003c/p\u003e\u003cul\u003e\u003cli\u003eNon critical checks (can be passed but has to be justified):\u003cul\u003e\u003cli\u003eusage of hardcoded values, everything should be created with portability in mind,\u003c/li\u003e\u003cli\u003emissing optimization on difficult database queries,\u003c/li\u003e\u003cli\u003etime consuming operations in request handling (e.g. sending emails synchronously during request processing),\u003c/li\u003e\u003cli\u003enot following all coding standards,\u003c/li\u003e\u003cli\u003eusing wrong HTTP methods for different actions in REST API (e.g. GET for writing data)\u003c/li\u003e\u003cli\u003ewrong response status codes (e.g. status 200 OK for returning message with error cause,\u003c/li\u003e\u003cli\u003emissing documentation of how to deploy application,\u003c/li\u003e\u003cli\u003emissing ability to upload files with special characters in file name,\u003c/li\u003e\u003cli\u003emore than one date format standard used in project\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e","structured_body":{"blocks":[{"key":"8tgrc","text":"These checks should be done during code review. Additional checks should also be done before production release.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8v9p5","text":"Critical checks:","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4qdja","text":"backend validation for critical data,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a0c7","text":"endpoints correct authorization and authentication settings,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cjm4h","text":"up to date requirements.txt file,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[{"offset":11,"length":16,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"4fkp7","text":"consistent and working migrations,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9bc0q","text":"passing CI linters checks,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ac836","text":"passing unit tests.","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ej9b6","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ft4jv","text":"Non critical checks (can be passed but has to be justified):","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"90cmn","text":"usage of hardcoded values, everything should be created with portability in mind,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"50tf2","text":"missing optimization on difficult database queries,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"akrg0","text":"time consuming operations in request handling (e.g. sending emails synchronously during request processing),","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e6mqk","text":"not following all coding standards,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eciol","text":"using wrong HTTP methods for different actions in REST API (e.g. GET for writing data)","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"59o1o","text":"wrong response status codes (e.g. status 200 OK for returning message with error cause,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ef802","text":"missing documentation of how to deploy application,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e1nsa","text":"missing ability to upload files with special characters in file name,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a6jk7","text":"more than one date format standard used in project","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Development checks","body":null,"serialized_body":"\u003cp\u003eThese checks should be done during code review. Additional checks should also be done before production release.\u003c/p\u003e\u003cul\u003e\u003cli\u003eCritical checks:\u003cul\u003e\u003cli\u003ebackend validation for critical data,\u003c/li\u003e\u003cli\u003eendpoints correct authorization and authentication settings,\u003c/li\u003e\u003cli\u003eup to date \u003cem\u003erequirements.txt\u003c/em\u003e file,\u003c/li\u003e\u003cli\u003econsistent and working migrations,\u003c/li\u003e\u003cli\u003epassing CI linters checks,\u003c/li\u003e\u003cli\u003epassing unit tests.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003c/p\u003e\u003cul\u003e\u003cli\u003eNon critical checks (can be passed but has to be justified):\u003cul\u003e\u003cli\u003eusage of hardcoded values, everything should be created with portability in mind,\u003c/li\u003e\u003cli\u003emissing optimization on difficult database queries,\u003c/li\u003e\u003cli\u003etime consuming operations in request handling (e.g. sending emails synchronously during request processing),\u003c/li\u003e\u003cli\u003enot following all coding standards,\u003c/li\u003e\u003cli\u003eusing wrong HTTP methods for different actions in REST API (e.g. GET for writing data)\u003c/li\u003e\u003cli\u003ewrong response status codes (e.g. status 200 OK for returning message with error cause,\u003c/li\u003e\u003cli\u003emissing documentation of how to deploy application,\u003c/li\u003e\u003cli\u003emissing ability to upload files with special characters in file name,\u003c/li\u003e\u003cli\u003emore than one date format standard used in project\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e","structured_body":{"blocks":[{"key":"8tgrc","text":"These checks should be done during code review. Additional checks should also be done before production release.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8v9p5","text":"Critical checks:","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4qdja","text":"backend validation for critical data,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a0c7","text":"endpoints correct authorization and authentication settings,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cjm4h","text":"up to date requirements.txt file,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[{"offset":11,"length":16,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"4fkp7","text":"consistent and working migrations,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9bc0q","text":"passing CI linters checks,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ac836","text":"passing unit tests.","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ej9b6","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ft4jv","text":"Non critical checks (can be passed but has to be justified):","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"90cmn","text":"usage of hardcoded values, everything should be created with portability in mind,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"50tf2","text":"missing optimization on difficult database queries,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"akrg0","text":"time consuming operations in request handling (e.g. sending emails synchronously during request processing),","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e6mqk","text":"not following all coding standards,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eciol","text":"using wrong HTTP methods for different actions in REST API (e.g. GET for writing data)","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"59o1o","text":"wrong response status codes (e.g. status 200 OK for returning message with error cause,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ef802","text":"missing documentation of how to deploy application,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e1nsa","text":"missing ability to upload files with special characters in file name,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a6jk7","text":"more than one date format standard used in project","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-15T16:43:28.544+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1240,"position":7,"new_position":7,"published_attributes":{"type":"slide","answers":[],"title":"Deployment checks","body":null,"serialized_body":"\u003cp\u003eAll critical deployment checks should be passed before publishing application.\u003c/p\u003e\u003cul\u003e\u003cli\u003eCritical:\u003cul\u003e\u003cli\u003e\u003cstrong\u003eall development checks should be passed before deployment\u003c/strong\u003e,\u003c/li\u003e\u003cli\u003eusing DEBUG=True setting on production environment,\u003c/li\u003e\u003cli\u003eincorrect file chmods and chowns.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003eNot always critical:\u003cul\u003e\u003cli\u003eno automated log rotation,\u003c/li\u003e\u003cli\u003eHTTPS not set,\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/\" rel=\"nofollow\"\u003eadditional checks for Django\u003c/a\u003e can be done by running:\u003cspan\u003e./manage.py check --deploy \u003c/span\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e","structured_body":{"blocks":[{"key":"fmlfq","text":"All critical deployment checks should be passed before publishing application.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"65tk0","text":"Critical:","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"27ohc","text":"all development checks should be passed before deployment,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[{"offset":0,"length":57,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"f1d9f","text":"using DEBUG=True setting on production environment,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dg302","text":"incorrect file chmods and chowns.","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a0kll","text":"Not always critical:","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"f6s9p","text":"no automated log rotation,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4nc4m","text":"HTTPS not set,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1k4vl","text":"additional checks for Django can be done by running:./manage.py check --deploy ","type":"unordered-list-item","depth":1,"inlineStyleRanges":[{"offset":52,"length":27,"style":"CODE"}],"entityRanges":[{"offset":0,"length":28,"key":0}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/","rel":"nofollow","url":"https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/"}}}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Deployment checks","body":null,"serialized_body":"\u003cp\u003eAll critical deployment checks should be passed before publishing application.\u003c/p\u003e\u003cul\u003e\u003cli\u003eCritical:\u003cul\u003e\u003cli\u003e\u003cstrong\u003eall development checks should be passed before deployment\u003c/strong\u003e,\u003c/li\u003e\u003cli\u003eusing DEBUG=True setting on production environment,\u003c/li\u003e\u003cli\u003eincorrect file chmods and chowns.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003eNot always critical:\u003cul\u003e\u003cli\u003eno automated log rotation,\u003c/li\u003e\u003cli\u003eHTTPS not set,\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/\" rel=\"nofollow\"\u003eadditional checks for Django\u003c/a\u003e can be done by running:\u003cspan\u003e./manage.py check --deploy \u003c/span\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e","structured_body":{"blocks":[{"key":"fmlfq","text":"All critical deployment checks should be passed before publishing application.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"65tk0","text":"Critical:","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"27ohc","text":"all development checks should be passed before deployment,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[{"offset":0,"length":57,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"f1d9f","text":"using DEBUG=True setting on production environment,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dg302","text":"incorrect file chmods and chowns.","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a0kll","text":"Not always critical:","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"f6s9p","text":"no automated log rotation,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4nc4m","text":"HTTPS not set,","type":"unordered-list-item","depth":1,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1k4vl","text":"additional checks for Django can be done by running:./manage.py check --deploy ","type":"unordered-list-item","depth":1,"inlineStyleRanges":[{"offset":52,"length":27,"style":"CODE"}],"entityRanges":[{"offset":0,"length":28,"key":0}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/","rel":"nofollow","url":"https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/"}}}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-15T16:43:28.544+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1241,"position":8,"new_position":8,"published_attributes":{"type":"slide","answers":[],"title":"Linters","body":null,"serialized_body":"\u003cp\u003ePyCharm IDE analyzes code on-the-fly and informs user about found errors. It also offers inspection profiles that allow pointing out which type of errors should IDE look for. More about PyCharm built in linter functionalities can be found \u003ca href=\"https://www.jetbrains.com/help/pycharm/code-inspection.html\" rel=\"nofollow\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eIt\u0026#x27;s also a good idea to use Python dedicated linters, for example \u003ca href=\"http://flake8.pycqa.org/en/latest/\" rel=\"nofollow\"\u003eFlake8\u003c/a\u003e or \u003ca href=\"http://pylint.pycqa.org/en/latest/intro.html\" rel=\"nofollow\"\u003epylint\u003c/a\u003e:\u003c/p\u003e\u003cul\u003e\u003cli\u003eFlake8 mainly performs PEP8 checks. It can be used with CI\u0026#x27;s, especially with \u003ca href=\"https://houndci.com/\" rel=\"nofollow\"\u003eHound\u003c/a\u003e as it requires very little configuration. Description on how to run Flake8 can be found \u003ca href=\"http://flake8.pycqa.org/en/latest/user/invocation.html\" rel=\"nofollow\"\u003ehere\u003c/a\u003e.\u003c/li\u003e\u003cli\u003epylint offers some more sophisticated and its output is very rich in details. It also can be integrated with PyCharm (instructions \u003ca href=\"http://pylint.pycqa.org/en/latest/user_guide/ide-integration.html#pylint-in-pycharm\" rel=\"nofollow\"\u003ehere\u003c/a\u003e) as well as with CI\u0026#x27;s. Description on how to run pylint can be found \u003ca href=\"https://pylint.readthedocs.io/en/latest/user_guide/run.html\" rel=\"nofollow\"\u003ehere\u003c/a\u003e.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cstrong\u003e\u003cstrong\u003eOther code quality tools\u003c/strong\u003e\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"https://codebeat.co/\" rel=\"nofollow\"\u003eCodeBeat\u003c/a\u003e - can be easily integrated with Github, Bitbucket and GitLab. CodeBeat performs several code checks and outputs general project quality, separate projects files ratings as well as suggestions of what can be done to rise project quality.\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://houndci.com/\" rel=\"nofollow\"\u003eHound\u003c/a\u003e - performs automatic code reviews during pull requests. It\u0026#x27;s possible to check code for a lot of different languages, including JavaScript, Ruby, Python, Go. Especially for Python, Hound offers \u003ca href=\"http://flake8.pycqa.org/en/latest/\" rel=\"nofollow\"\u003eFlake8\u003c/a\u003e linter. Instruction on how to setup Hound to work with Flake8 can be found \u003ca href=\"https://intercom.help/hound/configuration/flake8\" rel=\"nofollow\"\u003ehere\u003c/a\u003e.\u003c/li\u003e\u003c/ul\u003e","structured_body":{"blocks":[{"key":"876nr","text":"PyCharm IDE analyzes code on-the-fly and informs user about found errors. It also offers inspection profiles that allow pointing out which type of errors should IDE look for. More about PyCharm built in linter functionalities can be found here.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":239,"length":4,"key":0}],"data":{}},{"key":"a762p","text":"It's also a good idea to use Python dedicated linters, for example Flake8 or pylint:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":67,"length":6,"key":1},{"offset":77,"length":6,"key":2}],"data":{}},{"key":"6dab7","text":"Flake8 mainly performs PEP8 checks. It can be used with CI's, especially with Hound as it requires very little configuration. Description on how to run Flake8 can be found here.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":78,"length":5,"key":3},{"offset":172,"length":4,"key":4}],"data":{}},{"key":"7gno9","text":"pylint offers some more sophisticated and its output is very rich in details. It also can be integrated with PyCharm (instructions here) as well as with CI's. Description on how to run pylint can be found here.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":131,"length":4,"key":5},{"offset":205,"length":4,"key":6}],"data":{}},{"key":"cbepp","text":"Other code quality tools","type":"header-five","depth":0,"inlineStyleRanges":[{"offset":0,"length":24,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"54ne7","text":"CodeBeat - can be easily integrated with Github, Bitbucket and GitLab. CodeBeat performs several code checks and outputs general project quality, separate projects files ratings as well as suggestions of what can be done to rise project quality.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":8,"key":7}],"data":{}},{"key":"7ge8v","text":"Hound - performs automatic code reviews during pull requests. It's possible to check code for a lot of different languages, including JavaScript, Ruby, Python, Go. Especially for Python, Hound offers Flake8 linter. Instruction on how to setup Hound to work with Flake8 can be found here.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":5,"key":8},{"offset":200,"length":6,"key":9},{"offset":282,"length":4,"key":10}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.jetbrains.com/help/pycharm/code-inspection.html","rel":"nofollow","url":"https://www.jetbrains.com/help/pycharm/code-inspection.html"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"http://flake8.pycqa.org/en/latest/","rel":"nofollow","url":"http://flake8.pycqa.org/en/latest/"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"http://pylint.pycqa.org/en/latest/intro.html","rel":"nofollow","url":"http://pylint.pycqa.org/en/latest/intro.html"}},"3":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://houndci.com/","rel":"nofollow","url":"https://houndci.com/"}},"4":{"type":"LINK","mutability":"MUTABLE","data":{"href":"http://flake8.pycqa.org/en/latest/user/invocation.html","rel":"nofollow","url":"http://flake8.pycqa.org/en/latest/user/invocation.html"}},"5":{"type":"LINK","mutability":"MUTABLE","data":{"href":"http://pylint.pycqa.org/en/latest/user_guide/ide-integration.html#pylint-in-pycharm","rel":"nofollow","url":"http://pylint.pycqa.org/en/latest/user_guide/ide-integration.html#pylint-in-pycharm"}},"6":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://pylint.readthedocs.io/en/latest/user_guide/run.html","rel":"nofollow","url":"https://pylint.readthedocs.io/en/latest/user_guide/run.html"}},"7":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://codebeat.co/","rel":"nofollow","url":"https://codebeat.co/"}},"8":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://houndci.com/","rel":"nofollow","url":"https://houndci.com/"}},"9":{"type":"LINK","mutability":"MUTABLE","data":{"href":"http://flake8.pycqa.org/en/latest/","rel":"nofollow","url":"http://flake8.pycqa.org/en/latest/"}},"10":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://intercom.help/hound/configuration/flake8","rel":"nofollow","url":"https://intercom.help/hound/configuration/flake8"}}}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Linters","body":null,"serialized_body":"\u003cp\u003ePyCharm IDE analyzes code on-the-fly and informs user about found errors. It also offers inspection profiles that allow pointing out which type of errors should IDE look for. More about PyCharm built in linter functionalities can be found \u003ca href=\"https://www.jetbrains.com/help/pycharm/code-inspection.html\" rel=\"nofollow\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eIt\u0026#x27;s also a good idea to use Python dedicated linters, for example \u003ca href=\"http://flake8.pycqa.org/en/latest/\" rel=\"nofollow\"\u003eFlake8\u003c/a\u003e or \u003ca href=\"http://pylint.pycqa.org/en/latest/intro.html\" rel=\"nofollow\"\u003epylint\u003c/a\u003e:\u003c/p\u003e\u003cul\u003e\u003cli\u003eFlake8 mainly performs PEP8 checks. It can be used with CI\u0026#x27;s, especially with \u003ca href=\"https://houndci.com/\" rel=\"nofollow\"\u003eHound\u003c/a\u003e as it requires very little configuration. Description on how to run Flake8 can be found \u003ca href=\"http://flake8.pycqa.org/en/latest/user/invocation.html\" rel=\"nofollow\"\u003ehere\u003c/a\u003e.\u003c/li\u003e\u003cli\u003epylint offers some more sophisticated and its output is very rich in details. It also can be integrated with PyCharm (instructions \u003ca href=\"http://pylint.pycqa.org/en/latest/user_guide/ide-integration.html#pylint-in-pycharm\" rel=\"nofollow\"\u003ehere\u003c/a\u003e) as well as with CI\u0026#x27;s. Description on how to run pylint can be found \u003ca href=\"https://pylint.readthedocs.io/en/latest/user_guide/run.html\" rel=\"nofollow\"\u003ehere\u003c/a\u003e.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cstrong\u003e\u003cstrong\u003eOther code quality tools\u003c/strong\u003e\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"https://codebeat.co/\" rel=\"nofollow\"\u003eCodeBeat\u003c/a\u003e - can be easily integrated with Github, Bitbucket and GitLab. CodeBeat performs several code checks and outputs general project quality, separate projects files ratings as well as suggestions of what can be done to rise project quality.\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://houndci.com/\" rel=\"nofollow\"\u003eHound\u003c/a\u003e - performs automatic code reviews during pull requests. It\u0026#x27;s possible to check code for a lot of different languages, including JavaScript, Ruby, Python, Go. Especially for Python, Hound offers \u003ca href=\"http://flake8.pycqa.org/en/latest/\" rel=\"nofollow\"\u003eFlake8\u003c/a\u003e linter. Instruction on how to setup Hound to work with Flake8 can be found \u003ca href=\"https://intercom.help/hound/configuration/flake8\" rel=\"nofollow\"\u003ehere\u003c/a\u003e.\u003c/li\u003e\u003c/ul\u003e","structured_body":{"blocks":[{"key":"876nr","text":"PyCharm IDE analyzes code on-the-fly and informs user about found errors. It also offers inspection profiles that allow pointing out which type of errors should IDE look for. More about PyCharm built in linter functionalities can be found here.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":239,"length":4,"key":0}],"data":{}},{"key":"a762p","text":"It's also a good idea to use Python dedicated linters, for example Flake8 or pylint:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":67,"length":6,"key":1},{"offset":77,"length":6,"key":2}],"data":{}},{"key":"6dab7","text":"Flake8 mainly performs PEP8 checks. It can be used with CI's, especially with Hound as it requires very little configuration. Description on how to run Flake8 can be found here.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":78,"length":5,"key":3},{"offset":172,"length":4,"key":4}],"data":{}},{"key":"7gno9","text":"pylint offers some more sophisticated and its output is very rich in details. It also can be integrated with PyCharm (instructions here) as well as with CI's. Description on how to run pylint can be found here.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":131,"length":4,"key":5},{"offset":205,"length":4,"key":6}],"data":{}},{"key":"cbepp","text":"Other code quality tools","type":"header-five","depth":0,"inlineStyleRanges":[{"offset":0,"length":24,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"54ne7","text":"CodeBeat - can be easily integrated with Github, Bitbucket and GitLab. CodeBeat performs several code checks and outputs general project quality, separate projects files ratings as well as suggestions of what can be done to rise project quality.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":8,"key":7}],"data":{}},{"key":"7ge8v","text":"Hound - performs automatic code reviews during pull requests. It's possible to check code for a lot of different languages, including JavaScript, Ruby, Python, Go. Especially for Python, Hound offers Flake8 linter. Instruction on how to setup Hound to work with Flake8 can be found here.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":5,"key":8},{"offset":200,"length":6,"key":9},{"offset":282,"length":4,"key":10}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.jetbrains.com/help/pycharm/code-inspection.html","rel":"nofollow","url":"https://www.jetbrains.com/help/pycharm/code-inspection.html"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"http://flake8.pycqa.org/en/latest/","rel":"nofollow","url":"http://flake8.pycqa.org/en/latest/"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"http://pylint.pycqa.org/en/latest/intro.html","rel":"nofollow","url":"http://pylint.pycqa.org/en/latest/intro.html"}},"3":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://houndci.com/","rel":"nofollow","url":"https://houndci.com/"}},"4":{"type":"LINK","mutability":"MUTABLE","data":{"href":"http://flake8.pycqa.org/en/latest/user/invocation.html","rel":"nofollow","url":"http://flake8.pycqa.org/en/latest/user/invocation.html"}},"5":{"type":"LINK","mutability":"MUTABLE","data":{"href":"http://pylint.pycqa.org/en/latest/user_guide/ide-integration.html#pylint-in-pycharm","rel":"nofollow","url":"http://pylint.pycqa.org/en/latest/user_guide/ide-integration.html#pylint-in-pycharm"}},"6":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://pylint.readthedocs.io/en/latest/user_guide/run.html","rel":"nofollow","url":"https://pylint.readthedocs.io/en/latest/user_guide/run.html"}},"7":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://codebeat.co/","rel":"nofollow","url":"https://codebeat.co/"}},"8":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://houndci.com/","rel":"nofollow","url":"https://houndci.com/"}},"9":{"type":"LINK","mutability":"MUTABLE","data":{"href":"http://flake8.pycqa.org/en/latest/","rel":"nofollow","url":"http://flake8.pycqa.org/en/latest/"}},"10":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://intercom.help/hound/configuration/flake8","rel":"nofollow","url":"https://intercom.help/hound/configuration/flake8"}}}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-15T16:43:28.544+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1249,"position":9,"new_position":9,"published_attributes":{"type":"slide","answers":[],"title":"Static typing","body":null,"serialized_body":"\u003ch2\u003e\u003c/h2\u003e\u003cp\u003ePython offers static typing mechanism for explicitly stating type of variables that are going to be used. Using static typing can help with code management (especially in larger projects) as well as it speeds up code execution. More about this mechanism can be read in \u003ca href=\"https://www.python.org/dev/peps/pep-0484/\" rel=\"nofollow\"\u003ePEP484\u003c/a\u003e and in the docs \u003ca href=\"https://docs.python.org/3/library/typing.html\" rel=\"nofollow\"\u003ehere\u003c/a\u003e. Mentioning static typing it\u0026#x27;s worth saying that Python is (and will remain) dynamically typed language and any type hints (with all their usefulness) are not mandatory by convention.\u003c/p\u003e","structured_body":{"blocks":[{"key":"8efdf","text":"","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8pbcs","text":"Python offers static typing mechanism for explicitly stating type of variables that are going to be used. Using static typing can help with code management (especially in larger projects) as well as it speeds up code execution. More about this mechanism can be read in PEP484 and in the docs here. Mentioning static typing it's worth saying that Python is (and will remain) dynamically typed language and any type hints (with all their usefulness) are not mandatory by convention.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":269,"length":6,"key":0},{"offset":292,"length":4,"key":1}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.python.org/dev/peps/pep-0484/","rel":"nofollow","url":"https://www.python.org/dev/peps/pep-0484/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://docs.python.org/3/library/typing.html","rel":"nofollow","url":"https://docs.python.org/3/library/typing.html"}}}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Static typing","body":null,"serialized_body":"\u003ch2\u003e\u003c/h2\u003e\u003cp\u003ePython offers static typing mechanism for explicitly stating type of variables that are going to be used. Using static typing can help with code management (especially in larger projects) as well as it speeds up code execution. More about this mechanism can be read in \u003ca href=\"https://www.python.org/dev/peps/pep-0484/\" rel=\"nofollow\"\u003ePEP484\u003c/a\u003e and in the docs \u003ca href=\"https://docs.python.org/3/library/typing.html\" rel=\"nofollow\"\u003ehere\u003c/a\u003e. Mentioning static typing it\u0026#x27;s worth saying that Python is (and will remain) dynamically typed language and any type hints (with all their usefulness) are not mandatory by convention.\u003c/p\u003e","structured_body":{"blocks":[{"key":"8efdf","text":"","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8pbcs","text":"Python offers static typing mechanism for explicitly stating type of variables that are going to be used. Using static typing can help with code management (especially in larger projects) as well as it speeds up code execution. More about this mechanism can be read in PEP484 and in the docs here. Mentioning static typing it's worth saying that Python is (and will remain) dynamically typed language and any type hints (with all their usefulness) are not mandatory by convention.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":269,"length":6,"key":0},{"offset":292,"length":4,"key":1}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.python.org/dev/peps/pep-0484/","rel":"nofollow","url":"https://www.python.org/dev/peps/pep-0484/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://docs.python.org/3/library/typing.html","rel":"nofollow","url":"https://docs.python.org/3/library/typing.html"}}}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-15T16:43:28.544+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1250,"position":10,"new_position":10,"published_attributes":{"type":"multiple_choice","answers":[{"id":"1","body":"Do not delete migrations that were already applied on existing instances on staging or production.","correct":false,"position":1},{"id":"2","body":"Delete migrations that were already applied on existing instances on staging or production.","correct":true,"position":2},{"id":"3","body":"Comply with the rules of PEP8.","correct":false,"position":3},{"id":"4","body":"Use generators.","correct":false,"position":4}],"title":"Which is NOT a good rule to follow while coding in Python","body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"multiple_choice","answers":[{"id":"1","body":"Do not delete migrations that were already applied on existing instances on staging or production.","correct":false,"position":1},{"id":"2","body":"Delete migrations that were already applied on existing instances on staging or production.","correct":true,"position":2},{"id":"3","body":"Comply with the rules of PEP8.","correct":false,"position":3},{"id":"4","body":"Use generators.","correct":false,"position":4}],"title":"Which is NOT a good rule to follow while coding in Python","body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-15T16:43:28.544+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1272,"position":11,"new_position":11,"published_attributes":{"type":"multiple_choice","answers":[{"id":"1","body":"passing unit tests","correct":false,"position":1},{"id":"2","body":"backend validation for critical data","correct":false,"position":2},{"id":"3","body":"missing documentation of how to deploy application","correct":true,"position":3},{"id":"4","body":"up to date requirements.txt file","correct":false,"position":4}],"title":"Which is a non-critical development check?","body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"multiple_choice","answers":[{"id":"1","body":"passing unit tests","correct":false,"position":1},{"id":"2","body":"backend validation for critical data","correct":false,"position":2},{"id":"3","body":"missing documentation of how to deploy application","correct":true,"position":3},{"id":"4","body":"up to date requirements.txt file","correct":false,"position":4}],"title":"Which is a non-critical development check?","body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-15T16:43:28.544+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1273,"position":12,"new_position":12,"published_attributes":{"type":"multiple_choice","answers":[{"id":"1","body":"Flake8","correct":true,"position":1},{"id":"2","body":"pyLint","correct":false,"position":2},{"id":"3","body":"RuboCop","correct":false,"position":3}],"title":"Which one is NOT a Python linter?","body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"multiple_choice","answers":[{"id":"1","body":"Flake8","correct":true,"position":1},{"id":"2","body":"pyLint","correct":false,"position":2},{"id":"3","body":"RuboCop","correct":false,"position":3}],"title":"Which one is NOT a Python linter?","body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-15T16:43:28.544+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1617,"position":13,"new_position":13,"published_attributes":{"type":"slide","answers":[],"title":"Congrats!","body":null,"serialized_body":"\u003cp\u003e\u003cem\u003eCourse Author: Jakub Protasiewicz\u003c/em\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003cp\u003eYou have completed the \u0026quot;Python coding standards\u0026quot; e-learning course! Please leave your feedback about the course using \u003ca href=\"https://docs.google.com/forms/d/e/1FAIpQLSc69BL0N81cyFkR_BmBUV2gWXuqORcnw6X3Yg3Oil5OeAfclg/viewform?usp=sf_link\"\u003ethis form\u003c/a\u003e. \u003c/p\u003e\u003cp\u003eClick the \u0026quot;Complete\u0026quot; button below to finish the course.\u003c/p\u003e","structured_body":{"blocks":[{"key":"e7n63","text":"Course Author: Jakub Protasiewicz","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":33,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"52e4l","text":" ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":0}],"data":{}},{"key":"ffgmi","text":"You have completed the \"Python coding standards\" e-learning course! Please leave your feedback about the course using this form. ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":118,"length":9,"key":1}],"data":{}},{"key":"8l1dm","text":"Click the \"Complete\" button below to finish the course.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"external-image","mutability":"IMMUTABLE","data":{"original":"https://media.giphy.com/media/5GoVLqeAOo6PK/giphy.gif","thumb":"https://media.giphy.com/media/5GoVLqeAOo6PK/giphy.gif"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"url":"https://docs.google.com/forms/d/e/1FAIpQLSc69BL0N81cyFkR_BmBUV2gWXuqORcnw6X3Yg3Oil5OeAfclg/viewform?usp=sf_link","text":"this form"}}}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Congrats!","body":null,"serialized_body":"\u003cp\u003e\u003cem\u003eCourse Author: Jakub Protasiewicz\u003c/em\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003cp\u003eYou have completed the \u0026quot;Python coding standards\u0026quot; e-learning course! Please leave your feedback about the course using \u003ca href=\"https://docs.google.com/forms/d/e/1FAIpQLSc69BL0N81cyFkR_BmBUV2gWXuqORcnw6X3Yg3Oil5OeAfclg/viewform?usp=sf_link\"\u003ethis form\u003c/a\u003e. \u003c/p\u003e\u003cp\u003eClick the \u0026quot;Complete\u0026quot; button below to finish the course.\u003c/p\u003e","structured_body":{"blocks":[{"key":"e7n63","text":"Course Author: Jakub Protasiewicz","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":33,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"52e4l","text":" ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":0}],"data":{}},{"key":"ffgmi","text":"You have completed the \"Python coding standards\" e-learning course! Please leave your feedback about the course using this form. ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":118,"length":9,"key":1}],"data":{}},{"key":"8l1dm","text":"Click the \"Complete\" button below to finish the course.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"external-image","mutability":"IMMUTABLE","data":{"original":"https://media.giphy.com/media/5GoVLqeAOo6PK/giphy.gif","thumb":"https://media.giphy.com/media/5GoVLqeAOo6PK/giphy.gif"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"url":"https://docs.google.com/forms/d/e/1FAIpQLSc69BL0N81cyFkR_BmBUV2gWXuqORcnw6X3Yg3Oil5OeAfclg/viewform?usp=sf_link","text":"this form"}}}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-15T16:43:28.544+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]}],"attachments":[]}