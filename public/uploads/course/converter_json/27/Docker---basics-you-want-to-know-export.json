{"id":147,"title":"Docker - basics you want to know","estimated_time":21,"user_id":null,"passing_threshold":0,"published_at":"2021-04-09T16:09:45.192+02:00","has_unpublished_changes":false,"has_certificate":false,"external_id":null,"draft_external_id":null,"external_status":"inapplicable","course_type":"bridge","enrollments_count":63,"domain_id":1,"sub_account_id":1,"open_book":null,"description":null,"third_party_course_id":null,"external_course_id":null,"quizzes_count":5,"external_status_message":null,"manual_estimated_time":false,"show_correct_response":true,"max_quiz_attempts":null,"continuing_education_credits":null,"archived_at":null,"config":{},"unpublished_at":null,"external_learning_standard":null,"available_offline":false,"external_version":null,"ordered_slides":[{"id":1599,"position":1,"new_position":1,"published_attributes":{"type":"cover","answers":[],"title":null,"body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{"heading":"Docker - basics you want to know","background_image_url":"https://instructure-bridge-dub-prod.s3-eu-west-1.amazonaws.com/512/1/uploads/9d1b9c23-af24-47d8-9629-489faba9bde2.jpeg","background_image_opacity":0.7}},"draft_attributes":{"type":"cover","answers":[],"title":null,"body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{"heading":"Docker - basics you want to know","background_image_url":"https://instructure-bridge-dub-prod.s3-eu-west-1.amazonaws.com/512/1/uploads/9d1b9c23-af24-47d8-9629-489faba9bde2.jpeg","background_image_opacity":0.7}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":0,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1592,"position":2,"new_position":2,"published_attributes":{"type":"slide","answers":[],"title":"Course Overview","body":null,"serialized_body":"\u003cp\u003eDocker is the tool you may be sure that you will be working with during your work as a Python Developer.  That\u0026#x27;s why it may be useful to know and understand this solution.\u003c/p\u003e\u003cp\u003eIn this course you will learn about basic concepts of Docker containers, how to configure and use them. At the end you will find a short quiz.\u003c/p\u003e\u003cp\u003eI wish you effective learning and good luck :)\u003c/p\u003e\u003cp\u003e\u003c/p\u003e","structured_body":{"blocks":[{"key":"d5ees","text":"Docker is the tool you may be sure that you will be working with during your work as a Python Developer.  That's why it may be useful to know and understand this solution.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6opd6","text":"In this course you will learn about basic concepts of Docker containers, how to configure and use them. At the end you will find a short quiz.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dg4sa","text":"I wish you effective learning and good luck :)","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5p625","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Course Overview","body":null,"serialized_body":"\u003cp\u003eDocker is the tool you may be sure that you will be working with during your work as a Python Developer.  That\u0026#x27;s why it may be useful to know and understand this solution.\u003c/p\u003e\u003cp\u003eIn this course you will learn about basic concepts of Docker containers, how to configure and use them. At the end you will find a short quiz.\u003c/p\u003e\u003cp\u003eI wish you effective learning and good luck :)\u003c/p\u003e\u003cp\u003e\u003c/p\u003e","structured_body":{"blocks":[{"key":"d5ees","text":"Docker is the tool you may be sure that you will be working with during your work as a Python Developer.  That's why it may be useful to know and understand this solution.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6opd6","text":"In this course you will learn about basic concepts of Docker containers, how to configure and use them. At the end you will find a short quiz.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dg4sa","text":"I wish you effective learning and good luck :)","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5p625","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1591,"position":3,"new_position":3,"published_attributes":{"type":"slide","answers":[],"title":"Table of Contents","body":null,"serialized_body":"\u003col\u003e\u003cli\u003eDocker introduction\u003c/li\u003e\u003cli\u003eTerminology\u003c/li\u003e\u003cli\u003eDocker image\u003c/li\u003e\u003cli\u003eDockerfile\u003c/li\u003e\u003cli\u003eOfficial docker images\u003c/li\u003e\u003cli\u003eDocker-compose \u003c/li\u003e\u003cli\u003eUp vs run vs exec\u003c/li\u003e\u003cli\u003eCommands\u003c/li\u003e\u003cli\u003eVolume vs Bind Mounts\u003c/li\u003e\u003cli\u003eQuiz\u003c/li\u003e\u003c/ol\u003e","structured_body":{"blocks":[{"key":"37dvq","text":"Docker introduction","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c646b","text":"Terminology","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d9m3o","text":"Docker image","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2pvlm","text":"Dockerfile","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ar7qq","text":"Official docker images","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8ighg","text":"Docker-compose ","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8v39n","text":"Up vs run vs exec","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"djsvh","text":"Commands","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8jn0h","text":"Volume vs Bind Mounts","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3amae","text":"Quiz","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Table of Contents","body":null,"serialized_body":"\u003col\u003e\u003cli\u003eDocker introduction\u003c/li\u003e\u003cli\u003eTerminology\u003c/li\u003e\u003cli\u003eDocker image\u003c/li\u003e\u003cli\u003eDockerfile\u003c/li\u003e\u003cli\u003eOfficial docker images\u003c/li\u003e\u003cli\u003eDocker-compose \u003c/li\u003e\u003cli\u003eUp vs run vs exec\u003c/li\u003e\u003cli\u003eCommands\u003c/li\u003e\u003cli\u003eVolume vs Bind Mounts\u003c/li\u003e\u003cli\u003eQuiz\u003c/li\u003e\u003c/ol\u003e","structured_body":{"blocks":[{"key":"37dvq","text":"Docker introduction","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c646b","text":"Terminology","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d9m3o","text":"Docker image","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2pvlm","text":"Dockerfile","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ar7qq","text":"Official docker images","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8ighg","text":"Docker-compose ","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8v39n","text":"Up vs run vs exec","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"djsvh","text":"Commands","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8jn0h","text":"Volume vs Bind Mounts","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3amae","text":"Quiz","type":"ordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1500,"position":4,"new_position":4,"published_attributes":{"type":"slide","answers":[],"title":"What is Docker","body":null,"serialized_body":"\u003cp\u003eLet\u0026#x27;s start with a \u003cstrong\u003eContainer\u003c/strong\u003e- it is simply another process on your machine that has been isolated from all other processes on the host machine. \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eDocker\u003c/strong\u003e is an open-source technology used mostly for developing, deploying, and running applications.\u003c/p\u003e\u003cp\u003eDocker’s main benefit is to package applications in “containers” so they’re portable for any system running the Linux operating system (OS) or Windows OS.\u003c/p\u003e\u003cp\u003eIt allows for applications isolation from their underlying infrastructure so that software development is very fast and easy. \u003c/p\u003e\u003cp\u003e\u003c/p\u003e","structured_body":{"blocks":[{"key":"eljh7","text":"Let's start with a Container- it is simply another process on your machine that has been isolated from all other processes on the host machine. ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":19,"length":9,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"3mjf","text":"Docker is an open-source technology used mostly for developing, deploying, and running applications.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"co12v","text":"Docker’s main benefit is to package applications in “containers” so they’re portable for any system running the Linux operating system (OS) or Windows OS.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"v30h","text":"It allows for applications isolation from their underlying infrastructure so that software development is very fast and easy. ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"89ped","text":"","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"What is Docker","body":null,"serialized_body":"\u003cp\u003eLet\u0026#x27;s start with a \u003cstrong\u003eContainer\u003c/strong\u003e- it is simply another process on your machine that has been isolated from all other processes on the host machine. \u003c/p\u003e\u003cp\u003e\u003cstrong\u003eDocker\u003c/strong\u003e is an open-source technology used mostly for developing, deploying, and running applications.\u003c/p\u003e\u003cp\u003eDocker’s main benefit is to package applications in “containers” so they’re portable for any system running the Linux operating system (OS) or Windows OS.\u003c/p\u003e\u003cp\u003eIt allows for applications isolation from their underlying infrastructure so that software development is very fast and easy. \u003c/p\u003e\u003cp\u003e\u003c/p\u003e","structured_body":{"blocks":[{"key":"eljh7","text":"Let's start with a Container- it is simply another process on your machine that has been isolated from all other processes on the host machine. ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":19,"length":9,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"3mjf","text":"Docker is an open-source technology used mostly for developing, deploying, and running applications.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"co12v","text":"Docker’s main benefit is to package applications in “containers” so they’re portable for any system running the Linux operating system (OS) or Windows OS.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"v30h","text":"It allows for applications isolation from their underlying infrastructure so that software development is very fast and easy. ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"89ped","text":"","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1501,"position":5,"new_position":5,"published_attributes":{"type":"slide","answers":[],"title":"Why do we use containers?","body":null,"serialized_body":"\u003col\u003e\u003cli\u003e\u003cstrong\u003eConsistent and Isolated Environment\n\u003c/strong\u003eContainers offer a logical packaging mechanism in which applications can be abstracted from the environment in which they actually run.This gives developers the ability to create predictable environments that are isolated from the rest of the applications.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eFast Deployment and Cost-effectiveness\n\u003c/strong\u003eDocker-powered containers decrease deployment time and also give more control over resources giving your infrastructure improved efficiency.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eAbility to Run Anywhere\n\u003c/strong\u003eDocker images are free of environmental limitations, and are able to run anywhere, providing it is targeted OS (Windows, Mac OS, Linux ...)\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eFlexibility\n\u003c/strong\u003eIn case of an upgrade during a product’s release cycle, you can easily make the necessary changes to Docker containers, test them, and deploy a new version across multiple servers. \u003c/li\u003e\u003cli\u003e\u003cstrong\u003eRepeatability and Automation\n\u003c/strong\u003eDocker containers allow for repeatable infrastructure and config, which speeds up the development process.\u003c/li\u003e\u003c/ol\u003e","structured_body":{"blocks":[{"key":"fvhbr","text":"Consistent and Isolated Environment\nContainers offer a logical packaging mechanism in which applications can be abstracted from the environment in which they actually run.This gives developers the ability to create predictable environments that are isolated from the rest of the applications.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":36,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"9s26g","text":"Fast Deployment and Cost-effectiveness\nDocker-powered containers decrease deployment time and also give more control over resources giving your infrastructure improved efficiency.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":39,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"f1nd","text":"Ability to Run Anywhere\nDocker images are free of environmental limitations, and are able to run anywhere, providing it is targeted OS (Windows, Mac OS, Linux ...)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":24,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"a9rkf","text":"Flexibility\nIn case of an upgrade during a product’s release cycle, you can easily make the necessary changes to Docker containers, test them, and deploy a new version across multiple servers. ","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":12,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dnths","text":"Repeatability and Automation\nDocker containers allow for repeatable infrastructure and config, which speeds up the development process.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":29,"style":"BOLD"}],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Why do we use containers?","body":null,"serialized_body":"\u003col\u003e\u003cli\u003e\u003cstrong\u003eConsistent and Isolated Environment\n\u003c/strong\u003eContainers offer a logical packaging mechanism in which applications can be abstracted from the environment in which they actually run.This gives developers the ability to create predictable environments that are isolated from the rest of the applications.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eFast Deployment and Cost-effectiveness\n\u003c/strong\u003eDocker-powered containers decrease deployment time and also give more control over resources giving your infrastructure improved efficiency.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eAbility to Run Anywhere\n\u003c/strong\u003eDocker images are free of environmental limitations, and are able to run anywhere, providing it is targeted OS (Windows, Mac OS, Linux ...)\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eFlexibility\n\u003c/strong\u003eIn case of an upgrade during a product’s release cycle, you can easily make the necessary changes to Docker containers, test them, and deploy a new version across multiple servers. \u003c/li\u003e\u003cli\u003e\u003cstrong\u003eRepeatability and Automation\n\u003c/strong\u003eDocker containers allow for repeatable infrastructure and config, which speeds up the development process.\u003c/li\u003e\u003c/ol\u003e","structured_body":{"blocks":[{"key":"fvhbr","text":"Consistent and Isolated Environment\nContainers offer a logical packaging mechanism in which applications can be abstracted from the environment in which they actually run.This gives developers the ability to create predictable environments that are isolated from the rest of the applications.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":36,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"9s26g","text":"Fast Deployment and Cost-effectiveness\nDocker-powered containers decrease deployment time and also give more control over resources giving your infrastructure improved efficiency.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":39,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"f1nd","text":"Ability to Run Anywhere\nDocker images are free of environmental limitations, and are able to run anywhere, providing it is targeted OS (Windows, Mac OS, Linux ...)","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":24,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"a9rkf","text":"Flexibility\nIn case of an upgrade during a product’s release cycle, you can easily make the necessary changes to Docker containers, test them, and deploy a new version across multiple servers. ","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":12,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dnths","text":"Repeatability and Automation\nDocker containers allow for repeatable infrastructure and config, which speeds up the development process.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":29,"style":"BOLD"}],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1502,"position":6,"new_position":6,"published_attributes":{"type":"slide","answers":[],"title":"Terminology","body":null,"serialized_body":"\u003cul\u003e\u003cli\u003e\u003cstrong\u003eImages \u003c/strong\u003e- The blueprints/ templates of our applications which contain a set of instructions to form the basis of containers. \u003c/li\u003e\u003cli\u003e\u003cstrong\u003eContainers \u003c/strong\u003e- Created from Docker images and run the actual application. \u003c/li\u003e\u003cli\u003e\u003cstrong\u003eDocker Daemon \u003c/strong\u003e- The background service running on the host that manages building, running and distributing Docker containers. \u003c/li\u003e\u003cli\u003e\u003cstrong\u003eDocker Client \u003c/strong\u003e- The command line tool that allows the user to interact with the daemon. \u003c/li\u003e\u003cli\u003e\u003cstrong\u003eDocker Hub \u003c/strong\u003e- A registry of Docker images. You can think of the registry as a directory of all available Docker images. If required, one can host their own Docker registries and can use them for pulling images.\u003c/li\u003e\u003c/ul\u003e","structured_body":{"blocks":[{"key":"bc7pk","text":"Images - The blueprints/ templates of our applications which contain a set of instructions to form the basis of containers. ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"5ak2r","text":"Containers - Created from Docker images and run the actual application. ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":11,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"2rh48","text":"Docker Daemon - The background service running on the host that manages building, running and distributing Docker containers. ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"4u4f4","text":"Docker Client - The command line tool that allows the user to interact with the daemon. ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"40p84","text":"Docker Hub - A registry of Docker images. You can think of the registry as a directory of all available Docker images. If required, one can host their own Docker registries and can use them for pulling images.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":11,"style":"BOLD"}],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{},"allow_comments":false},"draft_attributes":{"type":"slide","answers":[],"title":"Terminology","body":null,"serialized_body":"\u003cul\u003e\u003cli\u003e\u003cstrong\u003eImages \u003c/strong\u003e- The blueprints/ templates of our applications which contain a set of instructions to form the basis of containers. \u003c/li\u003e\u003cli\u003e\u003cstrong\u003eContainers \u003c/strong\u003e- Created from Docker images and run the actual application. \u003c/li\u003e\u003cli\u003e\u003cstrong\u003eDocker Daemon \u003c/strong\u003e- The background service running on the host that manages building, running and distributing Docker containers. \u003c/li\u003e\u003cli\u003e\u003cstrong\u003eDocker Client \u003c/strong\u003e- The command line tool that allows the user to interact with the daemon. \u003c/li\u003e\u003cli\u003e\u003cstrong\u003eDocker Hub \u003c/strong\u003e- A registry of Docker images. You can think of the registry as a directory of all available Docker images. If required, one can host their own Docker registries and can use them for pulling images.\u003c/li\u003e\u003c/ul\u003e","structured_body":{"blocks":[{"key":"bc7pk","text":"Images - The blueprints/ templates of our applications which contain a set of instructions to form the basis of containers. ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"5ak2r","text":"Containers - Created from Docker images and run the actual application. ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":11,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"2rh48","text":"Docker Daemon - The background service running on the host that manages building, running and distributing Docker containers. ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"4u4f4","text":"Docker Client - The command line tool that allows the user to interact with the daemon. ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"40p84","text":"Docker Hub - A registry of Docker images. You can think of the registry as a directory of all available Docker images. If required, one can host their own Docker registries and can use them for pulling images.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":11,"style":"BOLD"}],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{},"allow_comments":false},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1503,"position":7,"new_position":7,"published_attributes":{"type":"slide","answers":[],"title":"Let's create a Docker Image","body":null,"serialized_body":"\u003cp\u003eDocker builds images automatically by reading the instructions from a \u003cstrong\u003eDockerfile\u003c/strong\u003e - a text file that contains all commands, in order, needed to build a given image. \u003c/p\u003e\u003cp\u003eDockerfile consists of instructions which create read-only layers and form a Docker image.\u003c/p\u003e\u003cp\u003eExample Dockerfile:\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eFROM python:3\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eENV PYTHONUNBUFFERED=1\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eWORKDIR /code\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eCOPY requirements.txt /code/\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eRUN pip install -r requirements.txt\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eCOPY . /code/\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTip: Only the instructions RUN, COPY, ADD create layers. To minimise the size of the container, try to minimise the number of layers.\u003c/p\u003e","structured_body":{"blocks":[{"key":"4as64","text":"Docker builds images automatically by reading the instructions from a Dockerfile - a text file that contains all commands, in order, needed to build a given image. ","type":"paragraph","depth":0,"inlineStyleRanges":[{"offset":70,"length":10,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"9en14","text":"Dockerfile consists of instructions which create read-only layers and form a Docker image.","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6td8l","text":"Example Dockerfile:","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1lsjj","text":"FROM python:3","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"54p0s","text":"ENV PYTHONUNBUFFERED=1","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3thbr","text":"WORKDIR /code","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5itq6","text":"COPY requirements.txt /code/","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4let6","text":"RUN pip install -r requirements.txt","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ce1gj","text":"COPY . /code/","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"38q77","text":"Tip: Only the instructions RUN, COPY, ADD create layers. To minimise the size of the container, try to minimise the number of layers.","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Let's create a Docker Image","body":null,"serialized_body":"\u003cp\u003eDocker builds images automatically by reading the instructions from a \u003cstrong\u003eDockerfile\u003c/strong\u003e - a text file that contains all commands, in order, needed to build a given image. \u003c/p\u003e\u003cp\u003eDockerfile consists of instructions which create read-only layers and form a Docker image.\u003c/p\u003e\u003cp\u003eExample Dockerfile:\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eFROM python:3\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eENV PYTHONUNBUFFERED=1\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eWORKDIR /code\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eCOPY requirements.txt /code/\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eRUN pip install -r requirements.txt\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eCOPY . /code/\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTip: Only the instructions RUN, COPY, ADD create layers. To minimise the size of the container, try to minimise the number of layers.\u003c/p\u003e","structured_body":{"blocks":[{"key":"4as64","text":"Docker builds images automatically by reading the instructions from a Dockerfile - a text file that contains all commands, in order, needed to build a given image. ","type":"paragraph","depth":0,"inlineStyleRanges":[{"offset":70,"length":10,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"9en14","text":"Dockerfile consists of instructions which create read-only layers and form a Docker image.","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6td8l","text":"Example Dockerfile:","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1lsjj","text":"FROM python:3","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"54p0s","text":"ENV PYTHONUNBUFFERED=1","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3thbr","text":"WORKDIR /code","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5itq6","text":"COPY requirements.txt /code/","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4let6","text":"RUN pip install -r requirements.txt","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ce1gj","text":"COPY . /code/","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"38q77","text":"Tip: Only the instructions RUN, COPY, ADD create layers. To minimise the size of the container, try to minimise the number of layers.","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1504,"position":8,"new_position":8,"published_attributes":{"type":"slide","answers":[],"title":"Sample Dockerfile Commands","body":null,"serialized_body":"\u003cul\u003e\u003cli\u003e\u003cstrong\u003eFROM\u003c/strong\u003e - initializes a new build stage and sets the \u003cem\u003eBase Image\u003c/em\u003e for subsequent instructions\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eENV\u003c/strong\u003e - sets Environment variables \u003c/li\u003e\u003cli\u003e\u003cstrong\u003eCOPY\u003c/strong\u003e - adds files from your Docker client’s current directory.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eRUN\u003c/strong\u003e - executes any commands in a new layer \u003c/li\u003e\u003cli\u003e\u003cstrong\u003eCMD\u003c/strong\u003e - specifies what command to run within the container\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eWORKDIR\u003c/strong\u003e - sets the working directory for any RUN, CMD, ENTRYPOINT, COPY and ADD instructions that follow it in the Dockerfile\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eCOPY -\u003c/strong\u003e copies new files or directories from \u0026lt;src\u0026gt; and adds them to the filesystem of the container at the path \u0026lt;dest\u0026gt;\u003cstrong\u003e.\u003c/strong\u003e\u003c/li\u003e\u003c/ul\u003e","structured_body":{"blocks":[{"key":"6lj3h","text":"FROM - initializes a new build stage and sets the Base Image for subsequent instructions","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":4,"style":"BOLD"},{"offset":50,"length":10,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"1pn9e","text":"ENV - sets Environment variables ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":3,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dvuim","text":"COPY - adds files from your Docker client’s current directory.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":4,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"3tk95","text":"RUN - executes any commands in a new layer ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":3,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"9q8u0","text":"CMD - specifies what command to run within the container","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":3,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"eag44","text":"WORKDIR - sets the working directory for any RUN, CMD, ENTRYPOINT, COPY and ADD instructions that follow it in the Dockerfile","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"403fa","text":"COPY - copies new files or directories from \u003csrc\u003e and adds them to the filesystem of the container at the path \u003cdest\u003e.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"BOLD"},{"offset":117,"length":1,"style":"BOLD"}],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Sample Dockerfile Commands","body":null,"serialized_body":"\u003cul\u003e\u003cli\u003e\u003cstrong\u003eFROM\u003c/strong\u003e - initializes a new build stage and sets the \u003cem\u003eBase Image\u003c/em\u003e for subsequent instructions\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eENV\u003c/strong\u003e - sets Environment variables \u003c/li\u003e\u003cli\u003e\u003cstrong\u003eCOPY\u003c/strong\u003e - adds files from your Docker client’s current directory.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eRUN\u003c/strong\u003e - executes any commands in a new layer \u003c/li\u003e\u003cli\u003e\u003cstrong\u003eCMD\u003c/strong\u003e - specifies what command to run within the container\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eWORKDIR\u003c/strong\u003e - sets the working directory for any RUN, CMD, ENTRYPOINT, COPY and ADD instructions that follow it in the Dockerfile\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eCOPY -\u003c/strong\u003e copies new files or directories from \u0026lt;src\u0026gt; and adds them to the filesystem of the container at the path \u0026lt;dest\u0026gt;\u003cstrong\u003e.\u003c/strong\u003e\u003c/li\u003e\u003c/ul\u003e","structured_body":{"blocks":[{"key":"6lj3h","text":"FROM - initializes a new build stage and sets the Base Image for subsequent instructions","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":4,"style":"BOLD"},{"offset":50,"length":10,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"1pn9e","text":"ENV - sets Environment variables ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":3,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dvuim","text":"COPY - adds files from your Docker client’s current directory.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":4,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"3tk95","text":"RUN - executes any commands in a new layer ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":3,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"9q8u0","text":"CMD - specifies what command to run within the container","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":3,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"eag44","text":"WORKDIR - sets the working directory for any RUN, CMD, ENTRYPOINT, COPY and ADD instructions that follow it in the Dockerfile","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"403fa","text":"COPY - copies new files or directories from \u003csrc\u003e and adds them to the filesystem of the container at the path \u003cdest\u003e.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"BOLD"},{"offset":117,"length":1,"style":"BOLD"}],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1505,"position":9,"new_position":9,"published_attributes":{"type":"slide","answers":[],"title":"Official Docker Images","body":null,"serialized_body":"\u003cp\u003eProbably you\u0026#x27;ve already met or you will meet the line like the one below in one of your Dockefiles:\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eFROM python:3.8-slim\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhat does it mean? When you’re building a Docker image for your Python application, you’re building it on the top of an existing image - and there are many possible variants of them to use. \u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cstrong\u003eAlpine - \u003c/strong\u003ebased on the \u003ca href=\"https://alpinelinux.org/\" rel=\"noopener nofollow\"\u003e\u003cspan\u003eAlpine Linux Project\u003c/span\u003e\u003c/a\u003e, which is an operating system that was built specifically for use inside of containers. Use it to make your resulting image as small as possible. \u003c/li\u003e\u003cli\u003e\u003cstrong\u003eSlim -\u003c/strong\u003e installs the minimal packages needed to run your particular tool. In the case of python, that’s the minimum packages to run python.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eStretch/Buster/Jessie -\u003c/strong\u003e codenames for different \u003ca href=\"https://wiki.debian.org/DebianReleases\" rel=\"noopener nofollow\"\u003e\u003cspan\u003eDebian releases\u003c/span\u003e\u003c/a\u003e. Choose one of these images if your code is compatible with a specific version of the Debian operating system.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e","structured_body":{"blocks":[{"key":"7bc1p","text":"Probably you've already met or you will meet the line like the one below in one of your Dockefiles:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"f77ul","text":"FROM python:3.8-slim","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"atbcp","text":"What does it mean? When you’re building a Docker image for your Python application, you’re building it on the top of an existing image - and there are many possible variants of them to use. ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3l9c6","text":"Alpine - based on the Alpine Linux Project, which is an operating system that was built specifically for use inside of containers. Use it to make your resulting image as small as possible. ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":9,"style":"BOLD"},{"offset":22,"length":20,"style":"UNDERLINE"}],"entityRanges":[{"offset":22,"length":20,"key":0}],"data":{}},{"key":"c4d0n","text":"Slim - installs the minimal packages needed to run your particular tool. In the case of python, that’s the minimum packages to run python.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"56rg5","text":"Stretch/Buster/Jessie - codenames for different Debian releases. Choose one of these images if your code is compatible with a specific version of the Debian operating system.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":23,"style":"BOLD"},{"offset":48,"length":15,"style":"UNDERLINE"}],"entityRanges":[{"offset":48,"length":15,"key":1}],"data":{}},{"key":"5682a","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"10cfo","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alpinelinux.org/","rel":"noopener nofollow","url":"https://alpinelinux.org/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://wiki.debian.org/DebianReleases","rel":"noopener nofollow","url":"https://wiki.debian.org/DebianReleases"}}}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Official Docker Images","body":null,"serialized_body":"\u003cp\u003eProbably you\u0026#x27;ve already met or you will meet the line like the one below in one of your Dockefiles:\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eFROM python:3.8-slim\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhat does it mean? When you’re building a Docker image for your Python application, you’re building it on the top of an existing image - and there are many possible variants of them to use. \u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cstrong\u003eAlpine - \u003c/strong\u003ebased on the \u003ca href=\"https://alpinelinux.org/\" rel=\"noopener nofollow\"\u003e\u003cspan\u003eAlpine Linux Project\u003c/span\u003e\u003c/a\u003e, which is an operating system that was built specifically for use inside of containers. Use it to make your resulting image as small as possible. \u003c/li\u003e\u003cli\u003e\u003cstrong\u003eSlim -\u003c/strong\u003e installs the minimal packages needed to run your particular tool. In the case of python, that’s the minimum packages to run python.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eStretch/Buster/Jessie -\u003c/strong\u003e codenames for different \u003ca href=\"https://wiki.debian.org/DebianReleases\" rel=\"noopener nofollow\"\u003e\u003cspan\u003eDebian releases\u003c/span\u003e\u003c/a\u003e. Choose one of these images if your code is compatible with a specific version of the Debian operating system.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e","structured_body":{"blocks":[{"key":"7bc1p","text":"Probably you've already met or you will meet the line like the one below in one of your Dockefiles:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"f77ul","text":"FROM python:3.8-slim","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"atbcp","text":"What does it mean? When you’re building a Docker image for your Python application, you’re building it on the top of an existing image - and there are many possible variants of them to use. ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3l9c6","text":"Alpine - based on the Alpine Linux Project, which is an operating system that was built specifically for use inside of containers. Use it to make your resulting image as small as possible. ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":9,"style":"BOLD"},{"offset":22,"length":20,"style":"UNDERLINE"}],"entityRanges":[{"offset":22,"length":20,"key":0}],"data":{}},{"key":"c4d0n","text":"Slim - installs the minimal packages needed to run your particular tool. In the case of python, that’s the minimum packages to run python.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":6,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"56rg5","text":"Stretch/Buster/Jessie - codenames for different Debian releases. Choose one of these images if your code is compatible with a specific version of the Debian operating system.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":23,"style":"BOLD"},{"offset":48,"length":15,"style":"UNDERLINE"}],"entityRanges":[{"offset":48,"length":15,"key":1}],"data":{}},{"key":"5682a","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"10cfo","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://alpinelinux.org/","rel":"noopener nofollow","url":"https://alpinelinux.org/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://wiki.debian.org/DebianReleases","rel":"noopener nofollow","url":"https://wiki.debian.org/DebianReleases"}}}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1506,"position":10,"new_position":10,"published_attributes":{"type":"slide","answers":[],"title":"Configure containers","body":null,"serialized_body":"\u003cp\u003eFor defining and running multi-container Docker applications, there is a tool called \u003cstrong\u003eCompose.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eWith Compose, you use a YAML file to configure your application’s services. Then, with a single command, you create and start all the services from your configuration.\u003c/p\u003e\u003cp\u003eIt allows you e.g. start, stop, and rebuild services or view the status of running services.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUsing Compose is basically a three-step process:\u003c/strong\u003e\u003c/p\u003e\u003col\u003e\u003cli\u003e\u003cstrong\u003eDefine your app’s environment with a Dockerfile so it can be reproduced anywhere.\u003c/strong\u003e\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eDefine the services that make up your app in docker-compose.yml so they can be run together in an isolated environment.\u003c/strong\u003e\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eRun docker-compose up to start and run your entire app. \u003c/strong\u003e\u003c/li\u003e\u003c/ol\u003e","structured_body":{"blocks":[{"key":"dkph1","text":"For defining and running multi-container Docker applications, there is a tool called Compose.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":85,"length":8,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"aekhb","text":"With Compose, you use a YAML file to configure your application’s services. Then, with a single command, you create and start all the services from your configuration.","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e3oou","text":"It allows you e.g. start, stop, and rebuild services or view the status of running services.","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5hpl4","text":"Using Compose is basically a three-step process:","type":"paragraph","depth":0,"inlineStyleRanges":[{"offset":0,"length":48,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"7hhd3","text":"Define your app’s environment with a Dockerfile so it can be reproduced anywhere.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"8a821","text":"Define the services that make up your app in docker-compose.yml so they can be run together in an isolated environment.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":119,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dfsl7","text":"Run docker-compose up to start and run your entire app. ","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":56,"style":"BOLD"}],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Configure containers","body":null,"serialized_body":"\u003cp\u003eFor defining and running multi-container Docker applications, there is a tool called \u003cstrong\u003eCompose.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eWith Compose, you use a YAML file to configure your application’s services. Then, with a single command, you create and start all the services from your configuration.\u003c/p\u003e\u003cp\u003eIt allows you e.g. start, stop, and rebuild services or view the status of running services.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eUsing Compose is basically a three-step process:\u003c/strong\u003e\u003c/p\u003e\u003col\u003e\u003cli\u003e\u003cstrong\u003eDefine your app’s environment with a Dockerfile so it can be reproduced anywhere.\u003c/strong\u003e\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eDefine the services that make up your app in docker-compose.yml so they can be run together in an isolated environment.\u003c/strong\u003e\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eRun docker-compose up to start and run your entire app. \u003c/strong\u003e\u003c/li\u003e\u003c/ol\u003e","structured_body":{"blocks":[{"key":"dkph1","text":"For defining and running multi-container Docker applications, there is a tool called Compose.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":85,"length":8,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"aekhb","text":"With Compose, you use a YAML file to configure your application’s services. Then, with a single command, you create and start all the services from your configuration.","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e3oou","text":"It allows you e.g. start, stop, and rebuild services or view the status of running services.","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5hpl4","text":"Using Compose is basically a three-step process:","type":"paragraph","depth":0,"inlineStyleRanges":[{"offset":0,"length":48,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"7hhd3","text":"Define your app’s environment with a Dockerfile so it can be reproduced anywhere.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":81,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"8a821","text":"Define the services that make up your app in docker-compose.yml so they can be run together in an isolated environment.","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":119,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"dfsl7","text":"Run docker-compose up to start and run your entire app. ","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":56,"style":"BOLD"}],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1507,"position":11,"new_position":11,"published_attributes":{"type":"slide","answers":[],"title":"Docker Compose Example","body":null,"serialized_body":"\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eversion: \u0026quot;3.9\u0026quot;\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eservices:\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e  db:\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e    image: postgres\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e    volumes:\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e      - ./data/db:/var/lib/postgresql/data\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e    environment:\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e      - POSTGRES_DB=postgres\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e      - POSTGRES_USER=postgres\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e      - POSTGRES_PASSWORD=postgres\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e  web:\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e    build: .\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e    command: python manage.py runserver 0.0.0.0:8000\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e    volumes:\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e      - .:/code\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e    ports:\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e      - \u0026quot;8000:8000\u0026quot;\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e    depends_on:\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e      - db\u003c/code\u003e\u003c/pre\u003e","structured_body":{"blocks":[{"key":"5tg6a","text":"version: \"3.9\"","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6rt7t","text":"services:","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ij54","text":"  db:","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9327j","text":"    image: postgres","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8jvno","text":"    volumes:","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cfegn","text":"      - ./data/db:/var/lib/postgresql/data","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4chmq","text":"    environment:","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"f3sm4","text":"      - POSTGRES_DB=postgres","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2an83","text":"      - POSTGRES_USER=postgres","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8mhn4","text":"      - POSTGRES_PASSWORD=postgres","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9bmae","text":"  web:","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bqoj","text":"    build: .","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bakbt","text":"    command: python manage.py runserver 0.0.0.0:8000","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"apmg3","text":"    volumes:","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d1acl","text":"      - .:/code","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8k08j","text":"    ports:","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cl5sn","text":"      - \"8000:8000\"","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6513s","text":"    depends_on:","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1tju9","text":"      - db","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Docker Compose Example","body":null,"serialized_body":"\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eversion: \u0026quot;3.9\u0026quot;\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003eservices:\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e  db:\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e    image: postgres\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e    volumes:\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e      - ./data/db:/var/lib/postgresql/data\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e    environment:\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e      - POSTGRES_DB=postgres\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e      - POSTGRES_USER=postgres\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e      - POSTGRES_PASSWORD=postgres\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e  web:\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e    build: .\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e    command: python manage.py runserver 0.0.0.0:8000\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e    volumes:\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e      - .:/code\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e    ports:\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e      - \u0026quot;8000:8000\u0026quot;\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e    depends_on:\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e      - db\u003c/code\u003e\u003c/pre\u003e","structured_body":{"blocks":[{"key":"5tg6a","text":"version: \"3.9\"","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6rt7t","text":"services:","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ij54","text":"  db:","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9327j","text":"    image: postgres","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8jvno","text":"    volumes:","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cfegn","text":"      - ./data/db:/var/lib/postgresql/data","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4chmq","text":"    environment:","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"f3sm4","text":"      - POSTGRES_DB=postgres","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2an83","text":"      - POSTGRES_USER=postgres","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8mhn4","text":"      - POSTGRES_PASSWORD=postgres","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9bmae","text":"  web:","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8bqoj","text":"    build: .","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bakbt","text":"    command: python manage.py runserver 0.0.0.0:8000","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"apmg3","text":"    volumes:","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d1acl","text":"      - .:/code","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8k08j","text":"    ports:","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cl5sn","text":"      - \"8000:8000\"","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6513s","text":"    depends_on:","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1tju9","text":"      - db","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1557,"position":12,"new_position":12,"published_attributes":{"type":"slide","answers":[],"title":"Some Docker-Compose file explanation","body":null,"serialized_body":"\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e\u003cstrong\u003eversion\u003c/strong\u003e- docker-compose version\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e\u003cstrong\u003eimage\u003c/strong\u003e- builds a container using a given Docker image\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e\u003cstrong\u003evolumes\u003c/strong\u003e- mount host paths or named volumes in a container\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e\u003cstrong\u003eenvironment\u003c/strong\u003e- specify environment variables for a container\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e\u003cstrong\u003ebuild\u003c/strong\u003e- use a dot . to build a container using a default Dockerfile in a current directory or add params \u003cstrong\u003econtext \u003c/strong\u003eand \u003cstrong\u003edockerfile \u003c/strong\u003eto specify the directory and name of a different Dockerfile. \u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e\u003cstrong\u003ecommand\u003c/strong\u003e- specify the command to run the service\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e\u003cstrong\u003eports\u003c/strong\u003e- specify the ports for services exposing e.g. [container port]:[host port]\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e\u003cstrong\u003edepends_on\u003c/strong\u003e- specify the dependency and order of running containers\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can check out more \u003ca href=\"https://docs.docker.com/compose/compose-file/compose-file-v3/\"\u003ehere\u003c/a\u003e!\u003c/p\u003e","structured_body":{"blocks":[{"key":"bgbcf","text":"version- docker-compose version","type":"code-block","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"b0g9","text":"image- builds a container using a given Docker image","type":"code-block","depth":0,"inlineStyleRanges":[{"offset":0,"length":5,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"236i3","text":"volumes- mount host paths or named volumes in a container","type":"code-block","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"btq08","text":"environment- specify environment variables for a container","type":"code-block","depth":0,"inlineStyleRanges":[{"offset":0,"length":11,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"fpt31","text":"build- use a dot . to build a container using a default Dockerfile in a current directory or add params context and dockerfile to specify the directory and name of a different Dockerfile. ","type":"code-block","depth":0,"inlineStyleRanges":[{"offset":0,"length":5,"style":"BOLD"},{"offset":104,"length":8,"style":"BOLD"},{"offset":116,"length":11,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"10mbk","text":"command- specify the command to run the service","type":"code-block","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"df700","text":"ports- specify the ports for services exposing e.g. [container port]:[host port]","type":"code-block","depth":0,"inlineStyleRanges":[{"offset":0,"length":5,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"15r47","text":"depends_on- specify the dependency and order of running containers","type":"code-block","depth":0,"inlineStyleRanges":[{"offset":0,"length":10,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"av9bt","text":"You can check out more here!","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":23,"length":4,"key":0}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"url":"https://docs.docker.com/compose/compose-file/compose-file-v3/","text":"here"}}}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Some Docker-Compose file explanation","body":null,"serialized_body":"\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e\u003cstrong\u003eversion\u003c/strong\u003e- docker-compose version\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e\u003cstrong\u003eimage\u003c/strong\u003e- builds a container using a given Docker image\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e\u003cstrong\u003evolumes\u003c/strong\u003e- mount host paths or named volumes in a container\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e\u003cstrong\u003eenvironment\u003c/strong\u003e- specify environment variables for a container\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e\u003cstrong\u003ebuild\u003c/strong\u003e- use a dot . to build a container using a default Dockerfile in a current directory or add params \u003cstrong\u003econtext \u003c/strong\u003eand \u003cstrong\u003edockerfile \u003c/strong\u003eto specify the directory and name of a different Dockerfile. \u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e\u003cstrong\u003ecommand\u003c/strong\u003e- specify the command to run the service\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e\u003cstrong\u003eports\u003c/strong\u003e- specify the ports for services exposing e.g. [container port]:[host port]\u003c/code\u003e\u003c/pre\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003e\u003cstrong\u003edepends_on\u003c/strong\u003e- specify the dependency and order of running containers\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can check out more \u003ca href=\"https://docs.docker.com/compose/compose-file/compose-file-v3/\"\u003ehere\u003c/a\u003e!\u003c/p\u003e","structured_body":{"blocks":[{"key":"bgbcf","text":"version- docker-compose version","type":"code-block","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"b0g9","text":"image- builds a container using a given Docker image","type":"code-block","depth":0,"inlineStyleRanges":[{"offset":0,"length":5,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"236i3","text":"volumes- mount host paths or named volumes in a container","type":"code-block","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"btq08","text":"environment- specify environment variables for a container","type":"code-block","depth":0,"inlineStyleRanges":[{"offset":0,"length":11,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"fpt31","text":"build- use a dot . to build a container using a default Dockerfile in a current directory or add params context and dockerfile to specify the directory and name of a different Dockerfile. ","type":"code-block","depth":0,"inlineStyleRanges":[{"offset":0,"length":5,"style":"BOLD"},{"offset":104,"length":8,"style":"BOLD"},{"offset":116,"length":11,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"10mbk","text":"command- specify the command to run the service","type":"code-block","depth":0,"inlineStyleRanges":[{"offset":0,"length":7,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"df700","text":"ports- specify the ports for services exposing e.g. [container port]:[host port]","type":"code-block","depth":0,"inlineStyleRanges":[{"offset":0,"length":5,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"15r47","text":"depends_on- specify the dependency and order of running containers","type":"code-block","depth":0,"inlineStyleRanges":[{"offset":0,"length":10,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"av9bt","text":"You can check out more here!","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":23,"length":4,"key":0}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"url":"https://docs.docker.com/compose/compose-file/compose-file-v3/","text":"here"}}}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1509,"position":13,"new_position":13,"published_attributes":{"type":"slide","answers":[],"title":"Difference between docker-compose’s up vs run vs exec commands","body":null,"serialized_body":"\u003cp\u003eMajority of the time, you will most likely want to bring up all of the services listed in your docker-compose.yml and have the containers run their default command, so you would want to use \u003cstrong\u003eup\u003c/strong\u003e.\u003c/p\u003e\u003cp\u003eThere will be times when you need to run a one-off process/task to support your application. This is when you might need \u003cstrong\u003erun or exec.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eThe run command will spin up a \u003cstrong\u003enew\u003c/strong\u003e container for you to use. The exec command will allow you to use a container that\u003cstrong\u003e is already running.\u003c/strong\u003e\u003c/p\u003e","structured_body":{"blocks":[{"key":"8g58o","text":"Majority of the time, you will most likely want to bring up all of the services listed in your docker-compose.yml and have the containers run their default command, so you would want to use up.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":190,"length":2,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"buhqm","text":"There will be times when you need to run a one-off process/task to support your application. This is when you might need run or exec.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":121,"length":12,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"22c09","text":"The run command will spin up a new container for you to use. The exec command will allow you to use a container that is already running.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":31,"length":3,"style":"BOLD"},{"offset":116,"length":20,"style":"BOLD"}],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Difference between docker-compose’s up vs run vs exec commands","body":null,"serialized_body":"\u003cp\u003eMajority of the time, you will most likely want to bring up all of the services listed in your docker-compose.yml and have the containers run their default command, so you would want to use \u003cstrong\u003eup\u003c/strong\u003e.\u003c/p\u003e\u003cp\u003eThere will be times when you need to run a one-off process/task to support your application. This is when you might need \u003cstrong\u003erun or exec.\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eThe run command will spin up a \u003cstrong\u003enew\u003c/strong\u003e container for you to use. The exec command will allow you to use a container that\u003cstrong\u003e is already running.\u003c/strong\u003e\u003c/p\u003e","structured_body":{"blocks":[{"key":"8g58o","text":"Majority of the time, you will most likely want to bring up all of the services listed in your docker-compose.yml and have the containers run their default command, so you would want to use up.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":190,"length":2,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"buhqm","text":"There will be times when you need to run a one-off process/task to support your application. This is when you might need run or exec.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":121,"length":12,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"22c09","text":"The run command will spin up a new container for you to use. The exec command will allow you to use a container that is already running.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":31,"length":3,"style":"BOLD"},{"offset":116,"length":20,"style":"BOLD"}],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1508,"position":14,"new_position":14,"published_attributes":{"type":"slide","answers":[],"title":"Useful Commands","body":null,"serialized_body":"\u003cp\u003e\u003cstrong\u003edocker pull - \u003c/strong\u003eused to pull images from the docker repository (hub.docker.com)\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003edocker pull \u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003edocker run - \u003c/strong\u003eused to create a container from an image\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003edocker run -it -d \u0026lt;image name\u0026gt;\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003edocker ps -\u003c/strong\u003e used to list the running containers\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003edocker ps\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003edocker exec - \u003c/strong\u003eused to access the running container\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003edocker exec -it \u0026lt;container id\u0026gt; bash\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003edocker stop - \u003c/strong\u003eused to\u003cstrong\u003e \u003c/strong\u003estop a running container\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003edocker stop \u0026lt;container id\u0026gt;\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003edocker kill - \u003c/strong\u003eused to kill the container by stopping its execution immediately\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003edocker kill \u0026lt;container id\u0026gt;\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003edocker logs - \u003c/strong\u003eused to display logging of a given container\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003edocker logs \u0026lt;container id\u0026gt;\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003edocker restart - \u003c/strong\u003eused to restart a docker container. It stops and starts the container again\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003edocker restart \u0026lt;container id\u0026gt;\u003c/code\u003e\u003c/pre\u003e","structured_body":{"blocks":[{"key":"3brn1","text":"docker pull - used to pull images from the docker repository (hub.docker.com)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"c5pd","text":"docker pull ","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d5gl","text":"docker run - used to create a container from an image","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":13,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"426dj","text":"docker run -it -d \u003cimage name\u003e","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8a06p","text":"docker ps - used to list the running containers","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":11,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"b0im6","text":"docker ps","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a4vbm","text":"docker exec - used to access the running container","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"ajqs9","text":"docker exec -it \u003ccontainer id\u003e bash","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"empju","text":"docker stop - used to stop a running container","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"BOLD"},{"offset":21,"length":1,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"3btph","text":"docker stop \u003ccontainer id\u003e","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cfi68","text":"docker kill - used to kill the container by stopping its execution immediately","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"brj96","text":"docker kill \u003ccontainer id\u003e","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8scg7","text":"docker logs - used to display logging of a given container","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"fvhgv","text":"docker logs \u003ccontainer id\u003e","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e5mqa","text":"docker restart - used to restart a docker container. It stops and starts the container again","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":17,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"5ia4e","text":"docker restart \u003ccontainer id\u003e","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Useful Commands","body":null,"serialized_body":"\u003cp\u003e\u003cstrong\u003edocker pull - \u003c/strong\u003eused to pull images from the docker repository (hub.docker.com)\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003edocker pull \u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003edocker run - \u003c/strong\u003eused to create a container from an image\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003edocker run -it -d \u0026lt;image name\u0026gt;\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003edocker ps -\u003c/strong\u003e used to list the running containers\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003edocker ps\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003edocker exec - \u003c/strong\u003eused to access the running container\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003edocker exec -it \u0026lt;container id\u0026gt; bash\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003edocker stop - \u003c/strong\u003eused to\u003cstrong\u003e \u003c/strong\u003estop a running container\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003edocker stop \u0026lt;container id\u0026gt;\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003edocker kill - \u003c/strong\u003eused to kill the container by stopping its execution immediately\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003edocker kill \u0026lt;container id\u0026gt;\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003edocker logs - \u003c/strong\u003eused to display logging of a given container\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003edocker logs \u0026lt;container id\u0026gt;\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003edocker restart - \u003c/strong\u003eused to restart a docker container. It stops and starts the container again\u003c/p\u003e\u003cpre class=\"cce-content__code-block\"\u003e\u003ccode\u003edocker restart \u0026lt;container id\u0026gt;\u003c/code\u003e\u003c/pre\u003e","structured_body":{"blocks":[{"key":"3brn1","text":"docker pull - used to pull images from the docker repository (hub.docker.com)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"c5pd","text":"docker pull ","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d5gl","text":"docker run - used to create a container from an image","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":13,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"426dj","text":"docker run -it -d \u003cimage name\u003e","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8a06p","text":"docker ps - used to list the running containers","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":11,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"b0im6","text":"docker ps","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a4vbm","text":"docker exec - used to access the running container","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"ajqs9","text":"docker exec -it \u003ccontainer id\u003e bash","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"empju","text":"docker stop - used to stop a running container","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"BOLD"},{"offset":21,"length":1,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"3btph","text":"docker stop \u003ccontainer id\u003e","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cfi68","text":"docker kill - used to kill the container by stopping its execution immediately","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"brj96","text":"docker kill \u003ccontainer id\u003e","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8scg7","text":"docker logs - used to display logging of a given container","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"fvhgv","text":"docker logs \u003ccontainer id\u003e","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e5mqa","text":"docker restart - used to restart a docker container. It stops and starts the container again","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":17,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"5ia4e","text":"docker restart \u003ccontainer id\u003e","type":"code-block","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1559,"position":15,"new_position":15,"published_attributes":{"type":"slide","answers":[],"title":"Docker Volume vs Bind Mounts","body":null,"serialized_body":"\u003ch3\u003eDocker has two options for containers to store files in the host machine, so that the files are persisted even after the container stops: \u003cem\u003evolumes\u003c/em\u003e, and \u003cem\u003ebind mounts\u003c/em\u003e.\u003c/h3\u003e\u003ch3\u003e\u003c/h3\u003e\u003cp\u003eBind mounts have limited functionality compared to volumes. When you use a bind mount, a file or directory on the \u003cem\u003ehost machine\u003c/em\u003e is mounted into a container - \u003cstrong\u003efile or directory is referenced by its absolute path on the host machine\u003c/strong\u003e. \u003c/p\u003e\u003cp\u003eBy contrast, when you use a volume, a new directory is created within \u003cstrong\u003eDocker’s storage directory on the host machine\u003c/strong\u003e, and Docker manages that directory’s contents.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eBind mounts:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli\u003erely on docker host directory structure\u003c/li\u003e\u003cli\u003edifferent behavior for \u003cspan\u003e--mount\u003c/span\u003e and \u003cspan\u003e--volume\u003c/span\u003e parameters\u003c/li\u003e\u003cli\u003ecant’ be control by docker CLI\u003c/li\u003e\u003cli\u003eused mainly in development environments\u003c/li\u003e\u003cli\u003ewill not be deleted by default while we removing the container\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cstrong\u003eVolumes:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli\u003ecan be controlled by docker CLI\u003c/li\u003e\u003cli\u003eworks in Linux and Windows hosts\u003c/li\u003e\u003cli\u003eeasier to backup because of a central location \u003cspan\u003e/var/lib/docker/volumes\u003c/span\u003e\u003c/li\u003e\u003cli\u003eeasier to store in a cloud infrastructure\u003c/li\u003e\u003cli\u003ethis is the preferred method as docker documentation states\u003c/li\u003e\u003cli\u003egive a possibility to be shared between cluster nodes\u003c/li\u003e\u003c/ul\u003e","structured_body":{"blocks":[{"key":"2hsjh","text":"Docker has two options for containers to store files in the host machine, so that the files are persisted even after the container stops: volumes, and bind mounts.","type":"header-three","depth":0,"inlineStyleRanges":[{"offset":138,"length":7,"style":"ITALIC"},{"offset":151,"length":11,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"f2nl4","text":"","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7boro","text":"Bind mounts have limited functionality compared to volumes. When you use a bind mount, a file or directory on the host machine is mounted into a container - file or directory is referenced by its absolute path on the host machine. ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":114,"length":12,"style":"ITALIC"},{"offset":157,"length":72,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"44oa9","text":"By contrast, when you use a volume, a new directory is created within Docker’s storage directory on the host machine, and Docker manages that directory’s contents.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":70,"length":46,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"juc9","text":"Bind mounts:","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":12,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"2grht","text":"rely on docker host directory structure","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9alqs","text":"different behavior for --mount and --volume parameters","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":23,"length":7,"style":"CODE"},{"offset":35,"length":8,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"e6qdd","text":"cant’ be control by docker CLI","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1007c","text":"used mainly in development environments","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vuea","text":"will not be deleted by default while we removing the container","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2ihmf","text":"Volumes:","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":8,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"fk7o3","text":"can be controlled by docker CLI","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bjvp6","text":"works in Linux and Windows hosts","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4ifls","text":"easier to backup because of a central location /var/lib/docker/volumes","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":47,"length":23,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"df232","text":"easier to store in a cloud infrastructure","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a4sl8","text":"this is the preferred method as docker documentation states","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"di0se","text":"give a possibility to be shared between cluster nodes","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Docker Volume vs Bind Mounts","body":null,"serialized_body":"\u003ch3\u003eDocker has two options for containers to store files in the host machine, so that the files are persisted even after the container stops: \u003cem\u003evolumes\u003c/em\u003e, and \u003cem\u003ebind mounts\u003c/em\u003e.\u003c/h3\u003e\u003ch3\u003e\u003c/h3\u003e\u003cp\u003eBind mounts have limited functionality compared to volumes. When you use a bind mount, a file or directory on the \u003cem\u003ehost machine\u003c/em\u003e is mounted into a container - \u003cstrong\u003efile or directory is referenced by its absolute path on the host machine\u003c/strong\u003e. \u003c/p\u003e\u003cp\u003eBy contrast, when you use a volume, a new directory is created within \u003cstrong\u003eDocker’s storage directory on the host machine\u003c/strong\u003e, and Docker manages that directory’s contents.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eBind mounts:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli\u003erely on docker host directory structure\u003c/li\u003e\u003cli\u003edifferent behavior for \u003cspan\u003e--mount\u003c/span\u003e and \u003cspan\u003e--volume\u003c/span\u003e parameters\u003c/li\u003e\u003cli\u003ecant’ be control by docker CLI\u003c/li\u003e\u003cli\u003eused mainly in development environments\u003c/li\u003e\u003cli\u003ewill not be deleted by default while we removing the container\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003cstrong\u003eVolumes:\u003c/strong\u003e\u003c/p\u003e\u003cul\u003e\u003cli\u003ecan be controlled by docker CLI\u003c/li\u003e\u003cli\u003eworks in Linux and Windows hosts\u003c/li\u003e\u003cli\u003eeasier to backup because of a central location \u003cspan\u003e/var/lib/docker/volumes\u003c/span\u003e\u003c/li\u003e\u003cli\u003eeasier to store in a cloud infrastructure\u003c/li\u003e\u003cli\u003ethis is the preferred method as docker documentation states\u003c/li\u003e\u003cli\u003egive a possibility to be shared between cluster nodes\u003c/li\u003e\u003c/ul\u003e","structured_body":{"blocks":[{"key":"2hsjh","text":"Docker has two options for containers to store files in the host machine, so that the files are persisted even after the container stops: volumes, and bind mounts.","type":"header-three","depth":0,"inlineStyleRanges":[{"offset":138,"length":7,"style":"ITALIC"},{"offset":151,"length":11,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"f2nl4","text":"","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7boro","text":"Bind mounts have limited functionality compared to volumes. When you use a bind mount, a file or directory on the host machine is mounted into a container - file or directory is referenced by its absolute path on the host machine. ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":114,"length":12,"style":"ITALIC"},{"offset":157,"length":72,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"44oa9","text":"By contrast, when you use a volume, a new directory is created within Docker’s storage directory on the host machine, and Docker manages that directory’s contents.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":70,"length":46,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"juc9","text":"Bind mounts:","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":12,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"2grht","text":"rely on docker host directory structure","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9alqs","text":"different behavior for --mount and --volume parameters","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":23,"length":7,"style":"CODE"},{"offset":35,"length":8,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"e6qdd","text":"cant’ be control by docker CLI","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1007c","text":"used mainly in development environments","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9vuea","text":"will not be deleted by default while we removing the container","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2ihmf","text":"Volumes:","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":8,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"fk7o3","text":"can be controlled by docker CLI","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bjvp6","text":"works in Linux and Windows hosts","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4ifls","text":"easier to backup because of a central location /var/lib/docker/volumes","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":47,"length":23,"style":"CODE"}],"entityRanges":[],"data":{}},{"key":"df232","text":"easier to store in a cloud infrastructure","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a4sl8","text":"this is the preferred method as docker documentation states","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"di0se","text":"give a possibility to be shared between cluster nodes","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1560,"position":16,"new_position":16,"published_attributes":{"type":"multiple_choice","answers":[{"id":"2","body":"It's a running container","correct":false,"position":1},{"id":"3","body":"It's a docker data storage","correct":false,"position":2},{"id":"4","body":"It's a template for creating a container","correct":true,"position":3}],"title":"What is a docker image?","body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"multiple_choice","answers":[{"id":"2","body":"It's a running container","correct":false,"position":1},{"id":"3","body":"It's a docker data storage","correct":false,"position":2},{"id":"4","body":"It's a template for creating a container","correct":true,"position":3}],"title":"What is a docker image?","body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1561,"position":17,"new_position":17,"published_attributes":{"type":"multiple_choice","answers":[{"id":"1","body":"docker exec -it given_container bash","correct":true,"position":1},{"id":"2","body":"docker run -it -d given_image","correct":false,"position":2},{"id":"3","body":"docker logs container_id","correct":false,"position":3}],"title":"Which command will allow you to open a shell inside a given container?","body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"multiple_choice","answers":[{"id":"1","body":"docker exec -it given_container bash","correct":true,"position":1},{"id":"2","body":"docker run -it -d given_image","correct":false,"position":2},{"id":"3","body":"docker logs container_id","correct":false,"position":3}],"title":"Which command will allow you to open a shell inside a given container?","body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1562,"position":18,"new_position":18,"published_attributes":{"type":"multiple_choice","answers":[{"id":"1","body":"build: context: /dir","correct":false,"position":1},{"id":"2","body":"build: .","correct":true,"position":2},{"id":"3","body":"build: /dir","correct":false,"position":3}],"title":"how do you specify build parameter in docker-compose file to build a container using Dockerfile in a current directory?","body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"multiple_choice","answers":[{"id":"1","body":"build: context: /dir","correct":false,"position":1},{"id":"2","body":"build: .","correct":true,"position":2},{"id":"3","body":"build: /dir","correct":false,"position":3}],"title":"how do you specify build parameter in docker-compose file to build a container using Dockerfile in a current directory?","body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1565,"position":19,"new_position":19,"published_attributes":{"type":"multiple_choice","answers":[{"id":"1","body":"Docker Volume","correct":false,"position":1},{"id":"2","body":"Bind Mount","correct":true,"position":2}],"title":"Which solution allows you to specify container data storage in a host file system area?","body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"multiple_choice","answers":[{"id":"1","body":"Docker Volume","correct":false,"position":1},{"id":"2","body":"Bind Mount","correct":true,"position":2}],"title":"Which solution allows you to specify container data storage in a host file system area?","body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1566,"position":20,"new_position":20,"published_attributes":{"type":"multiple_choice","answers":[{"id":"1","body":"docker list","correct":false,"position":1},{"id":"2","body":"docker ps","correct":true,"position":2},{"id":"3","body":"docker ls","correct":false,"position":3}],"title":"How to list all running containers?","body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"multiple_choice","answers":[{"id":"1","body":"docker list","correct":false,"position":1},{"id":"2","body":"docker ps","correct":true,"position":2},{"id":"3","body":"docker ls","correct":false,"position":3}],"title":"How to list all running containers?","body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1564,"position":21,"new_position":21,"published_attributes":{"type":"slide","answers":[],"title":"Thank you","body":null,"serialized_body":"\u003cp\u003eAutor: Klaudia Korczak\u003c/p\u003e","structured_body":{"blocks":[{"key":"etihu","text":"Autor: Klaudia Korczak","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Thank you","body":null,"serialized_body":"\u003cp\u003eAutor: Klaudia Korczak\u003c/p\u003e","structured_body":{"blocks":[{"key":"etihu","text":"Autor: Klaudia Korczak","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1600,"position":22,"new_position":22,"published_attributes":{"type":"slide","answers":[],"title":"Thank you!","body":null,"serialized_body":"\u003cp\u003e\u003cem\u003eAuthor: Klaudia Korczak\u003c/em\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003cp\u003eYou have completed the \u0026quot;Docker - basics you want to know\u0026quot; e-learning course! Please leave your feedback about the course using \u003ca href=\"https://docs.google.com/forms/d/e/1FAIpQLSezkTiATECC4DdJYR9_TBdkmk3GPK2cfEatBhPo0CiA6g17gA/viewform?usp=sf_link\"\u003ethis form\u003c/a\u003e. \u003c/p\u003e\u003cp\u003eClick the \u0026quot;Complete\u0026quot; button below to finish the course.\u003c/p\u003e","structured_body":{"blocks":[{"key":"9lptj","text":"Author: Klaudia Korczak","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":23,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"7ouic","text":" ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":0}],"data":{}},{"key":"d3rc3","text":"You have completed the \"Docker - basics you want to know\" e-learning course! Please leave your feedback about the course using this form. ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":127,"length":9,"key":1}],"data":{}},{"key":"73qvd","text":"Click the \"Complete\" button below to finish the course.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"external-image","mutability":"IMMUTABLE","data":{"original":"https://media.giphy.com/media/LPBhHit55Xxx03lllW/giphy.gif","thumb":"https://media.giphy.com/media/LPBhHit55Xxx03lllW/giphy.gif"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"url":"https://docs.google.com/forms/d/e/1FAIpQLSezkTiATECC4DdJYR9_TBdkmk3GPK2cfEatBhPo0CiA6g17gA/viewform?usp=sf_link","text":"this form"}}}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Thank you!","body":null,"serialized_body":"\u003cp\u003e\u003cem\u003eAuthor: Klaudia Korczak\u003c/em\u003e\u003c/p\u003e\u003cp\u003e \u003c/p\u003e\u003cp\u003eYou have completed the \u0026quot;Docker - basics you want to know\u0026quot; e-learning course! Please leave your feedback about the course using \u003ca href=\"https://docs.google.com/forms/d/e/1FAIpQLSezkTiATECC4DdJYR9_TBdkmk3GPK2cfEatBhPo0CiA6g17gA/viewform?usp=sf_link\"\u003ethis form\u003c/a\u003e. \u003c/p\u003e\u003cp\u003eClick the \u0026quot;Complete\u0026quot; button below to finish the course.\u003c/p\u003e","structured_body":{"blocks":[{"key":"9lptj","text":"Author: Klaudia Korczak","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":23,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"7ouic","text":" ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":0}],"data":{}},{"key":"d3rc3","text":"You have completed the \"Docker - basics you want to know\" e-learning course! Please leave your feedback about the course using this form. ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":127,"length":9,"key":1}],"data":{}},{"key":"73qvd","text":"Click the \"Complete\" button below to finish the course.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"external-image","mutability":"IMMUTABLE","data":{"original":"https://media.giphy.com/media/LPBhHit55Xxx03lllW/giphy.gif","thumb":"https://media.giphy.com/media/LPBhHit55Xxx03lllW/giphy.gif"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"url":"https://docs.google.com/forms/d/e/1FAIpQLSezkTiATECC4DdJYR9_TBdkmk3GPK2cfEatBhPo0CiA6g17gA/viewform?usp=sf_link","text":"this form"}}}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-04-09T15:45:28.831+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]}],"attachments":[]}