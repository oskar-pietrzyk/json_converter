{"id":133,"title":"iOS Academy - Introduction","estimated_time":20,"user_id":874,"passing_threshold":80,"published_at":"2021-04-16T15:30:04.058+02:00","has_unpublished_changes":false,"has_certificate":true,"external_id":null,"draft_external_id":null,"external_status":"inapplicable","course_type":"bridge","enrollments_count":16,"domain_id":1,"sub_account_id":1,"open_book":null,"description":null,"third_party_course_id":null,"external_course_id":null,"quizzes_count":0,"external_status_message":null,"manual_estimated_time":true,"show_correct_response":true,"max_quiz_attempts":null,"continuing_education_credits":null,"archived_at":null,"config":{},"unpublished_at":null,"external_learning_standard":null,"available_offline":false,"external_version":null,"ordered_slides":[{"id":1621,"position":1,"new_position":1,"published_attributes":{"type":"cover","answers":[],"title":null,"body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{"dark":true,"heading":"iOS Academy - Introduction","background_image_url":"https://instructure-bridge-dub-prod.s3-eu-west-1.amazonaws.com/512/1/uploads/f7089f41-97a2-4b07-a26e-8100e99bfa3f.jpeg","background_image_opacity":0.4}},"draft_attributes":{"type":"cover","answers":[],"title":null,"body":null,"serialized_body":null,"structured_body":null,"feedback":null,"cover_slide_data":{"dark":true,"heading":"iOS Academy - Introduction","background_image_url":"https://instructure-bridge-dub-prod.s3-eu-west-1.amazonaws.com/512/1/uploads/f7089f41-97a2-4b07-a26e-8100e99bfa3f.jpeg","background_image_opacity":0.4}},"published_at":"2021-04-16T15:30:04.058+02:00","estimated_time":0,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1309,"position":2,"new_position":2,"published_attributes":{"type":"slide","title":"iOS academy - Learning resources","body":null,"serialized_body":"\u003cp\u003eWelcome to the iOS academy where you will learn how to create apps for iPhones. There is a short kick-off video which might help you.\u003c/p\u003e\u003cvideo data-attachment-id=\"2806\"\u003e\u003c/video\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003eLearning path is divided into a few \u003cstrong\u003eparts \u003c/strong\u003eand at the end of each part you are supposed to accomplish a simple task that will strengthen your knowledge and prepare you for coding in Netguru manner.\u003c/p\u003e\u003cp\u003eI would recommend using \u003cem\u003ePodcasts\u003c/em\u003e and \u003cem\u003eBooks\u003c/em\u003e applications as learning resources are linked to them. Additionally, you can directly use the documentation linked with the subjects so you always have them at hand.\u003c/p\u003e","structured_body":{"blocks":[{"key":"f1ba6","text":"Welcome to the iOS academy where you will learn how to create apps for iPhones. There is a short kick-off video which might help you.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"entityRefreshHax":1}},{"key":"fr161","text":" ","type":"atomic","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":0}],"data":{}},{"key":"2joej","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"45pvr","text":"Learning path is divided into a few parts and at the end of each part you are supposed to accomplish a simple task that will strengthen your knowledge and prepare you for coding in Netguru manner.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":36,"length":6,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"9ls7l","text":"I would recommend using Podcasts and Books applications as learning resources are linked to them. Additionally, you can directly use the documentation linked with the subjects so you always have them at hand.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":24,"length":8,"style":"ITALIC"},{"offset":37,"length":5,"style":"ITALIC"}],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"video","mutability":"IMMUTABLE","data":{"uploadId":null,"attachmentId":"2806"}}}},"answers":[],"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","title":"iOS academy - Learning resources","body":null,"serialized_body":"\u003cp\u003eWelcome to the iOS academy where you will learn how to create apps for iPhones. There is a short kick-off video which might help you.\u003c/p\u003e\u003cvideo data-attachment-id=\"2806\"\u003e\u003c/video\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003eLearning path is divided into a few \u003cstrong\u003eparts \u003c/strong\u003eand at the end of each part you are supposed to accomplish a simple task that will strengthen your knowledge and prepare you for coding in Netguru manner.\u003c/p\u003e\u003cp\u003eI would recommend using \u003cem\u003ePodcasts\u003c/em\u003e and \u003cem\u003eBooks\u003c/em\u003e applications as learning resources are linked to them. Additionally, you can directly use the documentation linked with the subjects so you always have them at hand.\u003c/p\u003e","structured_body":{"blocks":[{"key":"f1ba6","text":"Welcome to the iOS academy where you will learn how to create apps for iPhones. There is a short kick-off video which might help you.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"entityRefreshHax":1}},{"key":"fr161","text":" ","type":"atomic","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":0}],"data":{}},{"key":"2joej","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"45pvr","text":"Learning path is divided into a few parts and at the end of each part you are supposed to accomplish a simple task that will strengthen your knowledge and prepare you for coding in Netguru manner.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":36,"length":6,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"9ls7l","text":"I would recommend using Podcasts and Books applications as learning resources are linked to them. Additionally, you can directly use the documentation linked with the subjects so you always have them at hand.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":24,"length":8,"style":"ITALIC"},{"offset":37,"length":5,"style":"ITALIC"}],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"video","mutability":"IMMUTABLE","data":{"uploadId":null,"attachmentId":"2806"}}}},"answers":[],"feedback":null,"cover_slide_data":{}},"published_at":"2021-03-31T15:58:26.904+02:00","estimated_time":7,"attachments_count":1,"presentable":true,"external_id":null,"attachments":[{"id":2806,"notorious_id":"m-ycoLk3MJttCUfWRdKqecJKWLrwxX3P6","location":"https://s3-eu-west-1.amazonaws.com/bridge-learn-file-store-prod-dub/512/1/uploads/58ac03c3-9a0e-4070-a2bf-6275519fdd03.mp4","duration":346,"name":"iOS Academy kick-off (2020-10-29 at 07_36 GMT-7).mp4","learner_visible":true,"confirmed":false,"user_id":874,"context_type":"Slide","content_type":"video/mp4","file_modified_at":null,"availability":"complete","media":{"name":"58ac03c3-9a0e-4070-a2bf-6275519fdd03.mp4","links":{},"status":"complete","sources":[],"duration":346.593},"migrated_at":"2021-06-17T17:22:27.000+02:00","sources":[{"job_id":"m-ycoLk3MJttCUfWRdKqecJKWLrwxX3P6","status":"complete","mime_type":"video/mp4","target":"web","definition":"high","location":"transcodings/30f773bc-16e5-499d-bbda-8d77468897e2/2806"},{"job_id":"m-ycoLk3MJttCUfWRdKqecJKWLrwxX3P6","status":"complete","mime_type":"video/mp4","target":"web","definition":"standard","location":"transcodings/30f773bc-16e5-499d-bbda-8d77468897e2/2806"},{"job_id":"m-ycoLk3MJttCUfWRdKqecJKWLrwxX3P6","status":"complete","mime_type":"video/mp4","target":"web","definition":"low","location":"transcodings/30f773bc-16e5-499d-bbda-8d77468897e2/2806"}]}]},{"id":1311,"position":3,"new_position":3,"published_attributes":{"type":"slide","answers":[],"title":"Notes from other netgurals","body":null,"serialized_body":"\u003cp\u003e\u003ca href=\"https://docs.google.com/document/d/1weZ5RYuqUg3P52bfx6L3wAjlrHMi4DDnNJz27ijEDlE/edit\"\u003eHere\u003c/a\u003e are notes from people that were following this path. It may be useful for you. You can extend it and add your notes and suggestions also:\u003c/p\u003e\u003cp\u003eNotes from Stanford Course\u003c/p\u003e\u003cul\u003e\u003cli\u003eHold Option for documentation and checking the inferred variable type by Swift\u003c/li\u003e\u003cli\u003enil means \u0026quot;an optional that\u0026#x27;s not set\u0026quot;. That\u0026#x27;s the only thing it can mean\u003c/li\u003e\u003cli\u003e! - Assume the optional is set, and grab its value. Be careful it can cause: \u0026quot;Unexpectedly found nil while unwrapping an optional value\u0026quot;. You can use if let ... { // code } to grab the value only if set.\u003c/li\u003e\u003cli\u003eView to Controller communication is blind. Sometimes the View needs to sync with Controller. We do that by using the predefined methods that the View defines as part of its delegate. The Controller sets itself as the View’s delegate. (responds to common should, will, did messages). The delegate is set via a protocol. E.g. The controller is able to tell the ScrollView I’m your delegate. The View only knows the Controller implements that, nothing more.\u003c/li\u003e\u003cli\u003eViews do not own the data they are displaying. They will not have the data as part of their instance variables. So if needed they have a protocol to acquire it. (data, at, count) Controllers implement that so they can talk to the model and get the data for the View. Controllers are almost always the data source, not Model. We call this kind of delegate as data source.\u003c/li\u003e\u003cli\u003eModels usually have broadcasting mechanism so the Controller can listen about changes in data. I (Notification \u0026amp; KVO)\u003c/li\u003e\u003cli\u003eWe never have more than one screen controlled by a single MVC. If one MVC wants to interact with other MVCs, it always treats the other MVCs as part of its View. So it has to talk to them in a blind, structured way.\u003c/li\u003e\u003cli\u003eThere is no inheritance in Structs. Structs are value types, classes are reference types. Value type gets copied while passing as an argument, putting in an array, assigning to another var. Arrays, Ints, Strings, Dictionaries are all structs.\u003c/li\u003e\u003cli\u003eInit an empty array: var cards = [Card]()\u003c/li\u003e\u003cli\u003eClasses get a free init with no arguments as long as all of their vars are initialized. However the free initialiser that the Struct has can be used to initialise all of its vars.\u003c/li\u003e\u003cli\u003eInits usually have the same internal and external name for arguments.\u003c/li\u003e\u003cli\u003eFor loop in Swift:\u2028for identifier in [a sequence here]\u2028Sequence is what you can start somewhere and go to next one again and again. Arrays, strings, countable range are Sequences.  Example countable range: 0..\u0026lt;99 or 0…98\u003c/li\u003e\u003cli\u003eIn a static method, I can access to static vars without dot notation.\u003c/li\u003e\u003cli\u003eIn Swift you have to completely initialise something before you can access anything in it. Common error: Cannot use instance member X within property initialiser, property initialisers run before ‘self’ is available. If we add “lazy var” that means it doesn’t get initialised until someone grabs it. You can’t use proper observables with a lazy var. \u003c/li\u003e\u003cli\u003eSomeArray.indices returns the countable range of the array. Can be useful with for loops\u003c/li\u003e\u003cli\u003eDictionary is also a generic type like an array. Dictionary\u0026lt;Int, String\u0026gt; or [Int:String]\u003c/li\u003e\u003cli\u003eOne way to handle optionals is returning with ! After checking if it is not nil. Also this is common while dealing with optionals: return x ?? y\u003c/li\u003e\u003cli\u003eTuples: Group of values, simple syntax. Can be useful while returning multiple values from a func\u003c/li\u003e\u003cli\u003eComputed Properties: Has get and set. Set is optional. If there is only get, you don’t need to use the keyword get. Useful for derived state.\u003c/li\u003e\u003cli\u003eAccess Control: A good strategy is to just mark everything private by default. Then remove when it is necessary and ready to be consumed by other code.\u003c/li\u003e\u003cli\u003eAssertions are removed when you ship to the Apple store.\u003c/li\u003e\u003cli\u003eExtensions: Add methods/properties to a class/struct/enum. You can’t reimplement methods or properties that already exist. The properties we add can have no storage. (computed only). Abuses are common. e.g. Only extend String to make a better String, not to include some unrelated methods. Good use case might be adding helpers/utilities\u003c/li\u003e\u003cli\u003eOptionals are enums\u003c/li\u003e\u003cli\u003eEnum is another variety of data structure in addition to struct and class. An enum is a value type like struct. It can only have discrete cases. Enums can have associated data in Swift. Associated data is similar to tuples, you can rename them while extracting. An enum’s state can be checked with a switch statement. An enum can have methods and computed properties, but not stored properties. \u003c/li\u003e\u003cli\u003eSwift can infer the type on one side of the assignment or the other (not both) var otherItem: FastFoodMenuItem = .cookie\u003c/li\u003e\u003cli\u003eUse “mutating func” to modify self in enum and struct.\u003c/li\u003e\u003cli\u003eIn Swift switch does not fall through the next case after match by default.\u003c/li\u003e\u003cli\u003eFour essential data structure building concepts in Swift: class, struct, enum, protocol\u003c/li\u003e\u003cli\u003eMemory management: strong, weak, unowned. Weak is common for outlets and delegation. Weak sets itself to nil if noone is using it anymore so it is an optional.\u003c/li\u003e\u003cli\u003eA protocol are just a way for callers to call an API with anything they want. At the same time the receiving method can specify what it really wants. Protocol is a list of vars and functions to accomplish this, no implementation, no storage, no inheritance of data, it is purely inheritance of functionality. Protocol is a type. If you implement a protocol, you have to implement all of the vars and methods in Swift. Any functions that are expected to mutate the receiver should be mutating unless the protocol is restricted to classes using class keyword.  Check use of protocol extension further.\u003c/li\u003e\u003cli\u003eDelegation: Lecture 4 - 24:00\u003c/li\u003e\u003cli\u003eClosures are like one line function which capture their surrounding variables. Several different syntax. Useful for passing functions as arguments. If the last argument of a func is a closure it can be written outside. Check with lazy property initialization. Check memory cycles with Array/Class/Closure and use of unowned\u003c/li\u003e\u003cli\u003eThere are only two reference types in Swift: Classes and Closures.\u003c/li\u003e\u003cli\u003eCmd + Shift + F search in everywhere?\u003c/li\u003e\u003c/ul\u003e\u003ch3\u003eLecture 6:\u003c/h3\u003e\u003cul\u003e\u003cli\u003eLast 15 mins talks about Gestures.\u003c/li\u003e\u003c/ul\u003e\u003ch3\u003eLecture 7:\u003c/h3\u003e\u003cul\u003e\u003cli\u003eiOS provides some controllers whose View is other MVCs. Examples: UITabBarController, UINavigationController etc.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003eUseful links for second task:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"https://www.hackingwithswift.com/example-code/uikit/how-to-use-uisearchcontroller-to-let-users-enter-search-words\"\u003eHow to add UISearchController\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"http://blog.eppz.eu/swiftui-search-bar-in-the-navigation-bar/\"\u003eSearch bar in navigation bar\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://guides.codepath.com/ios/Search-Bar-Guide\"\u003eSearch bar guide\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://blog.kiprosh.com/ios-11-new-navigation-bar-and-search-controller/\"\u003eQuick navigation search bar guide\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://stackoverflow.com/questions/46007260/ios-11-customise-search-bar-in-navigation-bar\"\u003eHow to customise search bar\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eThird task useful links:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"https://developer.apple.com/swift/blog/?id=37\"\u003eWorking with JSON in Swift\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://www.hackingwithswift.com/books/ios-swiftui/sending-and-receiving-codable-data-with-urlsession-and-swiftui\"\u003eSending and receiving Codable data with URLSession and SwiftUI\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://dev.to/shawonashraf/loading-images-from-urls-in-swift-without-urlsession-127g\"\u003eLoading Images from URLs in Swift without URLSession\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://openweathermap.org/current\"\u003eWeather API\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://www.hackingwithswift.com/example-code/system/how-to-save-user-settings-using-userdefaults\"\u003eHow to save user settings using UserDefaults\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://stackoverflow.com/questions/28444914/monitor-changes-to-an-array-object\"\u003eMonitor changes to an array object\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://www.hackingwithswift.com/books/ios-swiftui/archiving-swift-objects-with-codable\"\u003eArchiving Swift objects with Codable\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://www.raywenderlich.com/3418439-encoding-and-decoding-in-swift\"\u003eEncoding and Decoding in Swift\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003c/p\u003e","structured_body":{"blocks":[{"key":"2puqb","text":"Here are notes from people that were following this path. It may be useful for you. You can extend it and add your notes and suggestions also:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":4,"key":0}],"data":{}},{"key":"8u4bt","text":"Notes from Stanford Course","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i8jl","text":"Hold Option for documentation and checking the inferred variable type by Swift","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2vohh","text":"nil means \"an optional that's not set\". That's the only thing it can mean","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2bl65","text":"! - Assume the optional is set, and grab its value. Be careful it can cause: \"Unexpectedly found nil while unwrapping an optional value\". You can use if let ... { // code } to grab the value only if set.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6n0dv","text":"View to Controller communication is blind. Sometimes the View needs to sync with Controller. We do that by using the predefined methods that the View defines as part of its delegate. The Controller sets itself as the View’s delegate. (responds to common should, will, did messages). The delegate is set via a protocol. E.g. The controller is able to tell the ScrollView I’m your delegate. The View only knows the Controller implements that, nothing more.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1vcsn","text":"Views do not own the data they are displaying. They will not have the data as part of their instance variables. So if needed they have a protocol to acquire it. (data, at, count) Controllers implement that so they can talk to the model and get the data for the View. Controllers are almost always the data source, not Model. We call this kind of delegate as data source.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7v0j3","text":"Models usually have broadcasting mechanism so the Controller can listen about changes in data. I (Notification \u0026 KVO)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4dk8l","text":"We never have more than one screen controlled by a single MVC. If one MVC wants to interact with other MVCs, it always treats the other MVCs as part of its View. So it has to talk to them in a blind, structured way.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3a6r7","text":"There is no inheritance in Structs. Structs are value types, classes are reference types. Value type gets copied while passing as an argument, putting in an array, assigning to another var. Arrays, Ints, Strings, Dictionaries are all structs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5aimd","text":"Init an empty array: var cards = [Card]()","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eb124","text":"Classes get a free init with no arguments as long as all of their vars are initialized. However the free initialiser that the Struct has can be used to initialise all of its vars.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"b8qm5","text":"Inits usually have the same internal and external name for arguments.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5il6c","text":"For loop in Swift:\u2028for identifier in [a sequence here]\u2028Sequence is what you can start somewhere and go to next one again and again. Arrays, strings, countable range are Sequences.  Example countable range: 0..\u003c99 or 0…98","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"27c51","text":"In a static method, I can access to static vars without dot notation.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"f8nc0","text":"In Swift you have to completely initialise something before you can access anything in it. Common error: Cannot use instance member X within property initialiser, property initialisers run before ‘self’ is available. If we add “lazy var” that means it doesn’t get initialised until someone grabs it. You can’t use proper observables with a lazy var. ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fj4qe","text":"SomeArray.indices returns the countable range of the array. Can be useful with for loops","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5i8j","text":"Dictionary is also a generic type like an array. Dictionary\u003cInt, String\u003e or [Int:String]","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c1cma","text":"One way to handle optionals is returning with ! After checking if it is not nil. Also this is common while dealing with optionals: return x ?? y","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"acptb","text":"Tuples: Group of values, simple syntax. Can be useful while returning multiple values from a func","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cpqfq","text":"Computed Properties: Has get and set. Set is optional. If there is only get, you don’t need to use the keyword get. Useful for derived state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6udqv","text":"Access Control: A good strategy is to just mark everything private by default. Then remove when it is necessary and ready to be consumed by other code.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"43t8e","text":"Assertions are removed when you ship to the Apple store.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"gthf","text":"Extensions: Add methods/properties to a class/struct/enum. You can’t reimplement methods or properties that already exist. The properties we add can have no storage. (computed only). Abuses are common. e.g. Only extend String to make a better String, not to include some unrelated methods. Good use case might be adding helpers/utilities","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cmgb1","text":"Optionals are enums","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2835j","text":"Enum is another variety of data structure in addition to struct and class. An enum is a value type like struct. It can only have discrete cases. Enums can have associated data in Swift. Associated data is similar to tuples, you can rename them while extracting. An enum’s state can be checked with a switch statement. An enum can have methods and computed properties, but not stored properties. ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8eb6f","text":"Swift can infer the type on one side of the assignment or the other (not both) var otherItem: FastFoodMenuItem = .cookie","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"677mi","text":"Use “mutating func” to modify self in enum and struct.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"da1b5","text":"In Swift switch does not fall through the next case after match by default.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2ug1h","text":"Four essential data structure building concepts in Swift: class, struct, enum, protocol","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dimhf","text":"Memory management: strong, weak, unowned. Weak is common for outlets and delegation. Weak sets itself to nil if noone is using it anymore so it is an optional.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3k1n5","text":"A protocol are just a way for callers to call an API with anything they want. At the same time the receiving method can specify what it really wants. Protocol is a list of vars and functions to accomplish this, no implementation, no storage, no inheritance of data, it is purely inheritance of functionality. Protocol is a type. If you implement a protocol, you have to implement all of the vars and methods in Swift. Any functions that are expected to mutate the receiver should be mutating unless the protocol is restricted to classes using class keyword.  Check use of protocol extension further.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eqrtu","text":"Delegation: Lecture 4 - 24:00","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"b9fge","text":"Closures are like one line function which capture their surrounding variables. Several different syntax. Useful for passing functions as arguments. If the last argument of a func is a closure it can be written outside. Check with lazy property initialization. Check memory cycles with Array/Class/Closure and use of unowned","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fnub4","text":"There are only two reference types in Swift: Classes and Closures.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9fqub","text":"Cmd + Shift + F search in everywhere?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5cmtf","text":"Lecture 6:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9qjrn","text":"Last 15 mins talks about Gestures.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"45vrf","text":"Lecture 7:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9ctcj","text":"iOS provides some controllers whose View is other MVCs. Examples: UITabBarController, UINavigationController etc.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"73s2s","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7ko2v","text":"Useful links for second task:","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cm97h","text":"How to add UISearchController","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":29,"key":1}],"data":{}},{"key":"7g0un","text":"Search bar in navigation bar","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":28,"key":2}],"data":{}},{"key":"a4odk","text":"Search bar guide","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":16,"key":3}],"data":{}},{"key":"8ljvo","text":"Quick navigation search bar guide","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":33,"key":4}],"data":{}},{"key":"claf7","text":"How to customise search bar","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":27,"key":5}],"data":{}},{"key":"8ufcj","text":"Third task useful links:","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"akmgr","text":"Working with JSON in Swift","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":26,"key":6}],"data":{}},{"key":"33q0e","text":"Sending and receiving Codable data with URLSession and SwiftUI","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":62,"key":7}],"data":{}},{"key":"dpak8","text":"Loading Images from URLs in Swift without URLSession","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":52,"key":8}],"data":{}},{"key":"7pn19","text":"Weather API","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":11,"key":9}],"data":{}},{"key":"2jcv","text":"How to save user settings using UserDefaults","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":44,"key":10}],"data":{}},{"key":"kq96","text":"Monitor changes to an array object","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":34,"key":11}],"data":{}},{"key":"9b34n","text":"Archiving Swift objects with Codable","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":36,"key":12}],"data":{}},{"key":"ek558","text":"Encoding and Decoding in Swift","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":30,"key":13}],"data":{}},{"key":"bom43","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"url":"https://docs.google.com/document/d/1weZ5RYuqUg3P52bfx6L3wAjlrHMi4DDnNJz27ijEDlE/edit","text":"Here"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.hackingwithswift.com/example-code/uikit/how-to-use-uisearchcontroller-to-let-users-enter-search-words","url":"https://www.hackingwithswift.com/example-code/uikit/how-to-use-uisearchcontroller-to-let-users-enter-search-words"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"http://blog.eppz.eu/swiftui-search-bar-in-the-navigation-bar/","url":"http://blog.eppz.eu/swiftui-search-bar-in-the-navigation-bar/"}},"3":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://guides.codepath.com/ios/Search-Bar-Guide","url":"https://guides.codepath.com/ios/Search-Bar-Guide"}},"4":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://blog.kiprosh.com/ios-11-new-navigation-bar-and-search-controller/","url":"https://blog.kiprosh.com/ios-11-new-navigation-bar-and-search-controller/"}},"5":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://stackoverflow.com/questions/46007260/ios-11-customise-search-bar-in-navigation-bar","url":"https://stackoverflow.com/questions/46007260/ios-11-customise-search-bar-in-navigation-bar"}},"6":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://developer.apple.com/swift/blog/?id=37","url":"https://developer.apple.com/swift/blog/?id=37"}},"7":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.hackingwithswift.com/books/ios-swiftui/sending-and-receiving-codable-data-with-urlsession-and-swiftui","url":"https://www.hackingwithswift.com/books/ios-swiftui/sending-and-receiving-codable-data-with-urlsession-and-swiftui"}},"8":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://dev.to/shawonashraf/loading-images-from-urls-in-swift-without-urlsession-127g","url":"https://dev.to/shawonashraf/loading-images-from-urls-in-swift-without-urlsession-127g"}},"9":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://openweathermap.org/current","url":"https://openweathermap.org/current"}},"10":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.hackingwithswift.com/example-code/system/how-to-save-user-settings-using-userdefaults","url":"https://www.hackingwithswift.com/example-code/system/how-to-save-user-settings-using-userdefaults"}},"11":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://stackoverflow.com/questions/28444914/monitor-changes-to-an-array-object","url":"https://stackoverflow.com/questions/28444914/monitor-changes-to-an-array-object"}},"12":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.hackingwithswift.com/books/ios-swiftui/archiving-swift-objects-with-codable","url":"https://www.hackingwithswift.com/books/ios-swiftui/archiving-swift-objects-with-codable"}},"13":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.raywenderlich.com/3418439-encoding-and-decoding-in-swift","url":"https://www.raywenderlich.com/3418439-encoding-and-decoding-in-swift"}}}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Notes from other netgurals","body":null,"serialized_body":"\u003cp\u003e\u003ca href=\"https://docs.google.com/document/d/1weZ5RYuqUg3P52bfx6L3wAjlrHMi4DDnNJz27ijEDlE/edit\"\u003eHere\u003c/a\u003e are notes from people that were following this path. It may be useful for you. You can extend it and add your notes and suggestions also:\u003c/p\u003e\u003cp\u003eNotes from Stanford Course\u003c/p\u003e\u003cul\u003e\u003cli\u003eHold Option for documentation and checking the inferred variable type by Swift\u003c/li\u003e\u003cli\u003enil means \u0026quot;an optional that\u0026#x27;s not set\u0026quot;. That\u0026#x27;s the only thing it can mean\u003c/li\u003e\u003cli\u003e! - Assume the optional is set, and grab its value. Be careful it can cause: \u0026quot;Unexpectedly found nil while unwrapping an optional value\u0026quot;. You can use if let ... { // code } to grab the value only if set.\u003c/li\u003e\u003cli\u003eView to Controller communication is blind. Sometimes the View needs to sync with Controller. We do that by using the predefined methods that the View defines as part of its delegate. The Controller sets itself as the View’s delegate. (responds to common should, will, did messages). The delegate is set via a protocol. E.g. The controller is able to tell the ScrollView I’m your delegate. The View only knows the Controller implements that, nothing more.\u003c/li\u003e\u003cli\u003eViews do not own the data they are displaying. They will not have the data as part of their instance variables. So if needed they have a protocol to acquire it. (data, at, count) Controllers implement that so they can talk to the model and get the data for the View. Controllers are almost always the data source, not Model. We call this kind of delegate as data source.\u003c/li\u003e\u003cli\u003eModels usually have broadcasting mechanism so the Controller can listen about changes in data. I (Notification \u0026amp; KVO)\u003c/li\u003e\u003cli\u003eWe never have more than one screen controlled by a single MVC. If one MVC wants to interact with other MVCs, it always treats the other MVCs as part of its View. So it has to talk to them in a blind, structured way.\u003c/li\u003e\u003cli\u003eThere is no inheritance in Structs. Structs are value types, classes are reference types. Value type gets copied while passing as an argument, putting in an array, assigning to another var. Arrays, Ints, Strings, Dictionaries are all structs.\u003c/li\u003e\u003cli\u003eInit an empty array: var cards = [Card]()\u003c/li\u003e\u003cli\u003eClasses get a free init with no arguments as long as all of their vars are initialized. However the free initialiser that the Struct has can be used to initialise all of its vars.\u003c/li\u003e\u003cli\u003eInits usually have the same internal and external name for arguments.\u003c/li\u003e\u003cli\u003eFor loop in Swift:\u2028for identifier in [a sequence here]\u2028Sequence is what you can start somewhere and go to next one again and again. Arrays, strings, countable range are Sequences.  Example countable range: 0..\u0026lt;99 or 0…98\u003c/li\u003e\u003cli\u003eIn a static method, I can access to static vars without dot notation.\u003c/li\u003e\u003cli\u003eIn Swift you have to completely initialise something before you can access anything in it. Common error: Cannot use instance member X within property initialiser, property initialisers run before ‘self’ is available. If we add “lazy var” that means it doesn’t get initialised until someone grabs it. You can’t use proper observables with a lazy var. \u003c/li\u003e\u003cli\u003eSomeArray.indices returns the countable range of the array. Can be useful with for loops\u003c/li\u003e\u003cli\u003eDictionary is also a generic type like an array. Dictionary\u0026lt;Int, String\u0026gt; or [Int:String]\u003c/li\u003e\u003cli\u003eOne way to handle optionals is returning with ! After checking if it is not nil. Also this is common while dealing with optionals: return x ?? y\u003c/li\u003e\u003cli\u003eTuples: Group of values, simple syntax. Can be useful while returning multiple values from a func\u003c/li\u003e\u003cli\u003eComputed Properties: Has get and set. Set is optional. If there is only get, you don’t need to use the keyword get. Useful for derived state.\u003c/li\u003e\u003cli\u003eAccess Control: A good strategy is to just mark everything private by default. Then remove when it is necessary and ready to be consumed by other code.\u003c/li\u003e\u003cli\u003eAssertions are removed when you ship to the Apple store.\u003c/li\u003e\u003cli\u003eExtensions: Add methods/properties to a class/struct/enum. You can’t reimplement methods or properties that already exist. The properties we add can have no storage. (computed only). Abuses are common. e.g. Only extend String to make a better String, not to include some unrelated methods. Good use case might be adding helpers/utilities\u003c/li\u003e\u003cli\u003eOptionals are enums\u003c/li\u003e\u003cli\u003eEnum is another variety of data structure in addition to struct and class. An enum is a value type like struct. It can only have discrete cases. Enums can have associated data in Swift. Associated data is similar to tuples, you can rename them while extracting. An enum’s state can be checked with a switch statement. An enum can have methods and computed properties, but not stored properties. \u003c/li\u003e\u003cli\u003eSwift can infer the type on one side of the assignment or the other (not both) var otherItem: FastFoodMenuItem = .cookie\u003c/li\u003e\u003cli\u003eUse “mutating func” to modify self in enum and struct.\u003c/li\u003e\u003cli\u003eIn Swift switch does not fall through the next case after match by default.\u003c/li\u003e\u003cli\u003eFour essential data structure building concepts in Swift: class, struct, enum, protocol\u003c/li\u003e\u003cli\u003eMemory management: strong, weak, unowned. Weak is common for outlets and delegation. Weak sets itself to nil if noone is using it anymore so it is an optional.\u003c/li\u003e\u003cli\u003eA protocol are just a way for callers to call an API with anything they want. At the same time the receiving method can specify what it really wants. Protocol is a list of vars and functions to accomplish this, no implementation, no storage, no inheritance of data, it is purely inheritance of functionality. Protocol is a type. If you implement a protocol, you have to implement all of the vars and methods in Swift. Any functions that are expected to mutate the receiver should be mutating unless the protocol is restricted to classes using class keyword.  Check use of protocol extension further.\u003c/li\u003e\u003cli\u003eDelegation: Lecture 4 - 24:00\u003c/li\u003e\u003cli\u003eClosures are like one line function which capture their surrounding variables. Several different syntax. Useful for passing functions as arguments. If the last argument of a func is a closure it can be written outside. Check with lazy property initialization. Check memory cycles with Array/Class/Closure and use of unowned\u003c/li\u003e\u003cli\u003eThere are only two reference types in Swift: Classes and Closures.\u003c/li\u003e\u003cli\u003eCmd + Shift + F search in everywhere?\u003c/li\u003e\u003c/ul\u003e\u003ch3\u003eLecture 6:\u003c/h3\u003e\u003cul\u003e\u003cli\u003eLast 15 mins talks about Gestures.\u003c/li\u003e\u003c/ul\u003e\u003ch3\u003eLecture 7:\u003c/h3\u003e\u003cul\u003e\u003cli\u003eiOS provides some controllers whose View is other MVCs. Examples: UITabBarController, UINavigationController etc.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003eUseful links for second task:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"https://www.hackingwithswift.com/example-code/uikit/how-to-use-uisearchcontroller-to-let-users-enter-search-words\"\u003eHow to add UISearchController\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"http://blog.eppz.eu/swiftui-search-bar-in-the-navigation-bar/\"\u003eSearch bar in navigation bar\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://guides.codepath.com/ios/Search-Bar-Guide\"\u003eSearch bar guide\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://blog.kiprosh.com/ios-11-new-navigation-bar-and-search-controller/\"\u003eQuick navigation search bar guide\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://stackoverflow.com/questions/46007260/ios-11-customise-search-bar-in-navigation-bar\"\u003eHow to customise search bar\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eThird task useful links:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"https://developer.apple.com/swift/blog/?id=37\"\u003eWorking with JSON in Swift\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://www.hackingwithswift.com/books/ios-swiftui/sending-and-receiving-codable-data-with-urlsession-and-swiftui\"\u003eSending and receiving Codable data with URLSession and SwiftUI\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://dev.to/shawonashraf/loading-images-from-urls-in-swift-without-urlsession-127g\"\u003eLoading Images from URLs in Swift without URLSession\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://openweathermap.org/current\"\u003eWeather API\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://www.hackingwithswift.com/example-code/system/how-to-save-user-settings-using-userdefaults\"\u003eHow to save user settings using UserDefaults\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://stackoverflow.com/questions/28444914/monitor-changes-to-an-array-object\"\u003eMonitor changes to an array object\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://www.hackingwithswift.com/books/ios-swiftui/archiving-swift-objects-with-codable\"\u003eArchiving Swift objects with Codable\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://www.raywenderlich.com/3418439-encoding-and-decoding-in-swift\"\u003eEncoding and Decoding in Swift\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003c/p\u003e","structured_body":{"blocks":[{"key":"2puqb","text":"Here are notes from people that were following this path. It may be useful for you. You can extend it and add your notes and suggestions also:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":4,"key":0}],"data":{}},{"key":"8u4bt","text":"Notes from Stanford Course","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i8jl","text":"Hold Option for documentation and checking the inferred variable type by Swift","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2vohh","text":"nil means \"an optional that's not set\". That's the only thing it can mean","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2bl65","text":"! - Assume the optional is set, and grab its value. Be careful it can cause: \"Unexpectedly found nil while unwrapping an optional value\". You can use if let ... { // code } to grab the value only if set.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6n0dv","text":"View to Controller communication is blind. Sometimes the View needs to sync with Controller. We do that by using the predefined methods that the View defines as part of its delegate. The Controller sets itself as the View’s delegate. (responds to common should, will, did messages). The delegate is set via a protocol. E.g. The controller is able to tell the ScrollView I’m your delegate. The View only knows the Controller implements that, nothing more.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1vcsn","text":"Views do not own the data they are displaying. They will not have the data as part of their instance variables. So if needed they have a protocol to acquire it. (data, at, count) Controllers implement that so they can talk to the model and get the data for the View. Controllers are almost always the data source, not Model. We call this kind of delegate as data source.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7v0j3","text":"Models usually have broadcasting mechanism so the Controller can listen about changes in data. I (Notification \u0026 KVO)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4dk8l","text":"We never have more than one screen controlled by a single MVC. If one MVC wants to interact with other MVCs, it always treats the other MVCs as part of its View. So it has to talk to them in a blind, structured way.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3a6r7","text":"There is no inheritance in Structs. Structs are value types, classes are reference types. Value type gets copied while passing as an argument, putting in an array, assigning to another var. Arrays, Ints, Strings, Dictionaries are all structs.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5aimd","text":"Init an empty array: var cards = [Card]()","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eb124","text":"Classes get a free init with no arguments as long as all of their vars are initialized. However the free initialiser that the Struct has can be used to initialise all of its vars.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"b8qm5","text":"Inits usually have the same internal and external name for arguments.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5il6c","text":"For loop in Swift:\u2028for identifier in [a sequence here]\u2028Sequence is what you can start somewhere and go to next one again and again. Arrays, strings, countable range are Sequences.  Example countable range: 0..\u003c99 or 0…98","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"27c51","text":"In a static method, I can access to static vars without dot notation.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"f8nc0","text":"In Swift you have to completely initialise something before you can access anything in it. Common error: Cannot use instance member X within property initialiser, property initialisers run before ‘self’ is available. If we add “lazy var” that means it doesn’t get initialised until someone grabs it. You can’t use proper observables with a lazy var. ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fj4qe","text":"SomeArray.indices returns the countable range of the array. Can be useful with for loops","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5i8j","text":"Dictionary is also a generic type like an array. Dictionary\u003cInt, String\u003e or [Int:String]","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c1cma","text":"One way to handle optionals is returning with ! After checking if it is not nil. Also this is common while dealing with optionals: return x ?? y","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"acptb","text":"Tuples: Group of values, simple syntax. Can be useful while returning multiple values from a func","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cpqfq","text":"Computed Properties: Has get and set. Set is optional. If there is only get, you don’t need to use the keyword get. Useful for derived state.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6udqv","text":"Access Control: A good strategy is to just mark everything private by default. Then remove when it is necessary and ready to be consumed by other code.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"43t8e","text":"Assertions are removed when you ship to the Apple store.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"gthf","text":"Extensions: Add methods/properties to a class/struct/enum. You can’t reimplement methods or properties that already exist. The properties we add can have no storage. (computed only). Abuses are common. e.g. Only extend String to make a better String, not to include some unrelated methods. Good use case might be adding helpers/utilities","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cmgb1","text":"Optionals are enums","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2835j","text":"Enum is another variety of data structure in addition to struct and class. An enum is a value type like struct. It can only have discrete cases. Enums can have associated data in Swift. Associated data is similar to tuples, you can rename them while extracting. An enum’s state can be checked with a switch statement. An enum can have methods and computed properties, but not stored properties. ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8eb6f","text":"Swift can infer the type on one side of the assignment or the other (not both) var otherItem: FastFoodMenuItem = .cookie","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"677mi","text":"Use “mutating func” to modify self in enum and struct.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"da1b5","text":"In Swift switch does not fall through the next case after match by default.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2ug1h","text":"Four essential data structure building concepts in Swift: class, struct, enum, protocol","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dimhf","text":"Memory management: strong, weak, unowned. Weak is common for outlets and delegation. Weak sets itself to nil if noone is using it anymore so it is an optional.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3k1n5","text":"A protocol are just a way for callers to call an API with anything they want. At the same time the receiving method can specify what it really wants. Protocol is a list of vars and functions to accomplish this, no implementation, no storage, no inheritance of data, it is purely inheritance of functionality. Protocol is a type. If you implement a protocol, you have to implement all of the vars and methods in Swift. Any functions that are expected to mutate the receiver should be mutating unless the protocol is restricted to classes using class keyword.  Check use of protocol extension further.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eqrtu","text":"Delegation: Lecture 4 - 24:00","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"b9fge","text":"Closures are like one line function which capture their surrounding variables. Several different syntax. Useful for passing functions as arguments. If the last argument of a func is a closure it can be written outside. Check with lazy property initialization. Check memory cycles with Array/Class/Closure and use of unowned","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fnub4","text":"There are only two reference types in Swift: Classes and Closures.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9fqub","text":"Cmd + Shift + F search in everywhere?","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5cmtf","text":"Lecture 6:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9qjrn","text":"Last 15 mins talks about Gestures.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"45vrf","text":"Lecture 7:","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9ctcj","text":"iOS provides some controllers whose View is other MVCs. Examples: UITabBarController, UINavigationController etc.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"73s2s","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7ko2v","text":"Useful links for second task:","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cm97h","text":"How to add UISearchController","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":29,"key":1}],"data":{}},{"key":"7g0un","text":"Search bar in navigation bar","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":28,"key":2}],"data":{}},{"key":"a4odk","text":"Search bar guide","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":16,"key":3}],"data":{}},{"key":"8ljvo","text":"Quick navigation search bar guide","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":33,"key":4}],"data":{}},{"key":"claf7","text":"How to customise search bar","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":27,"key":5}],"data":{}},{"key":"8ufcj","text":"Third task useful links:","type":"paragraph","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"akmgr","text":"Working with JSON in Swift","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":26,"key":6}],"data":{}},{"key":"33q0e","text":"Sending and receiving Codable data with URLSession and SwiftUI","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":62,"key":7}],"data":{}},{"key":"dpak8","text":"Loading Images from URLs in Swift without URLSession","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":52,"key":8}],"data":{}},{"key":"7pn19","text":"Weather API","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":11,"key":9}],"data":{}},{"key":"2jcv","text":"How to save user settings using UserDefaults","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":44,"key":10}],"data":{}},{"key":"kq96","text":"Monitor changes to an array object","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":34,"key":11}],"data":{}},{"key":"9b34n","text":"Archiving Swift objects with Codable","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":36,"key":12}],"data":{}},{"key":"ek558","text":"Encoding and Decoding in Swift","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":30,"key":13}],"data":{}},{"key":"bom43","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"url":"https://docs.google.com/document/d/1weZ5RYuqUg3P52bfx6L3wAjlrHMi4DDnNJz27ijEDlE/edit","text":"Here"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.hackingwithswift.com/example-code/uikit/how-to-use-uisearchcontroller-to-let-users-enter-search-words","url":"https://www.hackingwithswift.com/example-code/uikit/how-to-use-uisearchcontroller-to-let-users-enter-search-words"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"http://blog.eppz.eu/swiftui-search-bar-in-the-navigation-bar/","url":"http://blog.eppz.eu/swiftui-search-bar-in-the-navigation-bar/"}},"3":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://guides.codepath.com/ios/Search-Bar-Guide","url":"https://guides.codepath.com/ios/Search-Bar-Guide"}},"4":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://blog.kiprosh.com/ios-11-new-navigation-bar-and-search-controller/","url":"https://blog.kiprosh.com/ios-11-new-navigation-bar-and-search-controller/"}},"5":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://stackoverflow.com/questions/46007260/ios-11-customise-search-bar-in-navigation-bar","url":"https://stackoverflow.com/questions/46007260/ios-11-customise-search-bar-in-navigation-bar"}},"6":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://developer.apple.com/swift/blog/?id=37","url":"https://developer.apple.com/swift/blog/?id=37"}},"7":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.hackingwithswift.com/books/ios-swiftui/sending-and-receiving-codable-data-with-urlsession-and-swiftui","url":"https://www.hackingwithswift.com/books/ios-swiftui/sending-and-receiving-codable-data-with-urlsession-and-swiftui"}},"8":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://dev.to/shawonashraf/loading-images-from-urls-in-swift-without-urlsession-127g","url":"https://dev.to/shawonashraf/loading-images-from-urls-in-swift-without-urlsession-127g"}},"9":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://openweathermap.org/current","url":"https://openweathermap.org/current"}},"10":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.hackingwithswift.com/example-code/system/how-to-save-user-settings-using-userdefaults","url":"https://www.hackingwithswift.com/example-code/system/how-to-save-user-settings-using-userdefaults"}},"11":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://stackoverflow.com/questions/28444914/monitor-changes-to-an-array-object","url":"https://stackoverflow.com/questions/28444914/monitor-changes-to-an-array-object"}},"12":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.hackingwithswift.com/books/ios-swiftui/archiving-swift-objects-with-codable","url":"https://www.hackingwithswift.com/books/ios-swiftui/archiving-swift-objects-with-codable"}},"13":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://www.raywenderlich.com/3418439-encoding-and-decoding-in-swift","url":"https://www.raywenderlich.com/3418439-encoding-and-decoding-in-swift"}}}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-03-31T15:58:26.904+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1312,"position":4,"new_position":4,"published_attributes":{"type":"slide","answers":[],"title":"Q\u0026A Session","body":null,"serialized_body":"\u003cp\u003eHere is Q\u0026amp;A session between React Native developer and iOS developer about iOS academy. It’s technical and it will help you with tasks. I recommend watching it at least after doing first task:\u003c/p\u003e\u003cp\u003ePart 1: \u003c/p\u003e\u003cvideo data-attachment-id=\"2807\"\u003e\u003c/video\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003ePart 2:\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cvideo data-attachment-id=\"2808\"\u003e\u003c/video\u003e\u003cp\u003e\u003c/p\u003e","structured_body":{"blocks":[{"key":"4s8on","text":"Here is Q\u0026A session between React Native developer and iOS developer about iOS academy. It’s technical and it will help you with tasks. I recommend watching it at least after doing first task:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"entityRefreshHax":1}},{"key":"3htsf","text":"Part 1: ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cpf9s","text":" ","type":"atomic","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":0}],"data":{}},{"key":"ea0ok","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"aofke","text":"Part 2:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ds6l7","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16nb","text":" ","type":"atomic","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":1}],"data":{}},{"key":"759gb","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"video","mutability":"IMMUTABLE","data":{"uploadId":null,"attachmentId":"2807"}},"1":{"type":"video","mutability":"IMMUTABLE","data":{"uploadId":null,"attachmentId":"2808"}}}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Q\u0026A Session","body":null,"serialized_body":"\u003cp\u003eHere is Q\u0026amp;A session between React Native developer and iOS developer about iOS academy. It’s technical and it will help you with tasks. I recommend watching it at least after doing first task:\u003c/p\u003e\u003cp\u003ePart 1: \u003c/p\u003e\u003cvideo data-attachment-id=\"2807\"\u003e\u003c/video\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003ePart 2:\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cvideo data-attachment-id=\"2808\"\u003e\u003c/video\u003e\u003cp\u003e\u003c/p\u003e","structured_body":{"blocks":[{"key":"4s8on","text":"Here is Q\u0026A session between React Native developer and iOS developer about iOS academy. It’s technical and it will help you with tasks. I recommend watching it at least after doing first task:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{"entityRefreshHax":1}},{"key":"3htsf","text":"Part 1: ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cpf9s","text":" ","type":"atomic","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":0}],"data":{}},{"key":"ea0ok","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"aofke","text":"Part 2:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ds6l7","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a16nb","text":" ","type":"atomic","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":1}],"data":{}},{"key":"759gb","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"video","mutability":"IMMUTABLE","data":{"uploadId":null,"attachmentId":"2807"}},"1":{"type":"video","mutability":"IMMUTABLE","data":{"uploadId":null,"attachmentId":"2808"}}}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-03-31T15:58:26.904+02:00","estimated_time":87,"attachments_count":2,"presentable":true,"external_id":null,"attachments":[{"id":2807,"notorious_id":"m-37aTMLgs1M9CDW3KQAxvn2mNNTthyF4n","location":"https://s3-eu-west-1.amazonaws.com/bridge-learn-file-store-prod-dub/512/1/uploads/47c5494b-1bf8-4cbd-aa54-ef85e614eec0.mp4","duration":2017,"name":"iOS Academy (2020-11-18 at 06_17 GMT-8).mp4","learner_visible":true,"confirmed":false,"user_id":874,"context_type":"Slide","content_type":"video/mp4","file_modified_at":null,"availability":"complete","media":{"name":"47c5494b-1bf8-4cbd-aa54-ef85e614eec0.mp4","links":{},"status":"complete","sources":[],"duration":2017.472},"migrated_at":"2021-06-17T17:22:27.000+02:00","sources":[{"job_id":"m-37aTMLgs1M9CDW3KQAxvn2mNNTthyF4n","status":"complete","mime_type":"video/mp4","target":"web","definition":"standard","location":"transcodings/30f773bc-16e5-499d-bbda-8d77468897e2/2807"},{"job_id":"m-37aTMLgs1M9CDW3KQAxvn2mNNTthyF4n","status":"complete","mime_type":"video/mp4","target":"web","definition":"high","location":"transcodings/30f773bc-16e5-499d-bbda-8d77468897e2/2807"},{"job_id":"m-37aTMLgs1M9CDW3KQAxvn2mNNTthyF4n","status":"complete","mime_type":"video/mp4","target":"web","definition":"low","location":"transcodings/30f773bc-16e5-499d-bbda-8d77468897e2/2807"}]},{"id":2808,"notorious_id":"m-4cYadpauEPcZBqJ3tDS4636AMQaBfJez","location":"https://s3-eu-west-1.amazonaws.com/bridge-learn-file-store-prod-dub/512/1/uploads/bfbd62e3-27a1-4f67-8e98-f740c8b37337.mp4","duration":3156,"name":"jff-rcrw-vno (2020-11-18 at 07_38 GMT-8).mp4","learner_visible":true,"confirmed":false,"user_id":874,"context_type":"Slide","content_type":"video/mp4","file_modified_at":null,"availability":"complete","media":{"name":"bfbd62e3-27a1-4f67-8e98-f740c8b37337.mp4","links":{},"status":"complete","sources":[],"duration":3156.64},"migrated_at":"2021-06-17T17:22:27.000+02:00","sources":[{"job_id":"m-4cYadpauEPcZBqJ3tDS4636AMQaBfJez","status":"complete","mime_type":"video/mp4","target":"web","definition":"high","location":"transcodings/30f773bc-16e5-499d-bbda-8d77468897e2/2808"},{"job_id":"m-4cYadpauEPcZBqJ3tDS4636AMQaBfJez","status":"complete","mime_type":"video/mp4","target":"web","definition":"standard","location":"transcodings/30f773bc-16e5-499d-bbda-8d77468897e2/2808"},{"job_id":"m-4cYadpauEPcZBqJ3tDS4636AMQaBfJez","status":"complete","mime_type":"video/mp4","target":"web","definition":"low","location":"transcodings/30f773bc-16e5-499d-bbda-8d77468897e2/2808"}]}]},{"id":1313,"position":5,"new_position":5,"published_attributes":{"type":"slide","answers":[],"title":"Books","body":null,"serialized_body":"\u003cp\u003eBooks worth to read if you want to develop iOS apps.\u003c/p\u003e\u003cp\u003e‎\u003ca href=\"https://books.apple.com/pl/book/the-swift-programming-language-swift-5-3/id881256329\" title=\"https://books.apple.com/pl/book/the-swift-programming-language-swift-5-3/id881256329\"\u003e\u003cspan\u003eThe Swift Programming Language (Swift 5.3)\u003c/span\u003e\u003c/a\u003e / \u003ca href=\"https://docs.swift.org/swift-book/\" title=\"https://docs.swift.org/swift-book/\"\u003e\u003cspan\u003ehttps://docs.swift.org/swift-book/\u003c/span\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://books.apple.com/pl/book/app-development-with-swift/id1219117996\" title=\"https://books.apple.com/pl/book/app-development-with-swift/id1219117996\"\u003e\u003cspan\u003e‎App Development with Swift\u003c/span\u003e\u003c/a\u003e (Interactive book with a lot of useful informations)\u003c/p\u003e\u003cp\u003eIn this document you will find page numbers e.g. (p. 1) next to a specific topic. Those pages are from \u003ca href=\"https://books.apple.com/pl/book/app-development-with-swift/id1219117996\" title=\"https://books.apple.com/pl/book/app-development-with-swift/id1219117996\"\u003e\u003cspan\u003e‎App Development with Swift\u003c/span\u003e\u003c/a\u003e where you can find more information about the subject.\u003c/p\u003e","structured_body":{"blocks":[{"key":"f7plo","text":"Books worth to read if you want to develop iOS apps.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dctkt","text":"‎The Swift Programming Language (Swift 5.3) / https://docs.swift.org/swift-book/","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":42,"style":"UNDERLINE"},{"offset":46,"length":34,"style":"UNDERLINE"}],"entityRanges":[{"offset":1,"length":42,"key":0},{"offset":46,"length":34,"key":1}],"data":{}},{"key":"hk3r","text":"‎App Development with Swift (Interactive book with a lot of useful informations)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":27,"style":"UNDERLINE"}],"entityRanges":[{"offset":0,"length":27,"key":2}],"data":{}},{"key":"5ijl9","text":"In this document you will find page numbers e.g. (p. 1) next to a specific topic. Those pages are from ‎App Development with Swift where you can find more information about the subject.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":103,"length":27,"style":"UNDERLINE"}],"entityRanges":[{"offset":103,"length":27,"key":3}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://books.apple.com/pl/book/the-swift-programming-language-swift-5-3/id881256329","title":"https://books.apple.com/pl/book/the-swift-programming-language-swift-5-3/id881256329","url":"https://books.apple.com/pl/book/the-swift-programming-language-swift-5-3/id881256329"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://docs.swift.org/swift-book/","title":"https://docs.swift.org/swift-book/","url":"https://docs.swift.org/swift-book/"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://books.apple.com/pl/book/app-development-with-swift/id1219117996","title":"https://books.apple.com/pl/book/app-development-with-swift/id1219117996","url":"https://books.apple.com/pl/book/app-development-with-swift/id1219117996"}},"3":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://books.apple.com/pl/book/app-development-with-swift/id1219117996","title":"https://books.apple.com/pl/book/app-development-with-swift/id1219117996","url":"https://books.apple.com/pl/book/app-development-with-swift/id1219117996"}}}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Books","body":null,"serialized_body":"\u003cp\u003eBooks worth to read if you want to develop iOS apps.\u003c/p\u003e\u003cp\u003e‎\u003ca href=\"https://books.apple.com/pl/book/the-swift-programming-language-swift-5-3/id881256329\" title=\"https://books.apple.com/pl/book/the-swift-programming-language-swift-5-3/id881256329\"\u003e\u003cspan\u003eThe Swift Programming Language (Swift 5.3)\u003c/span\u003e\u003c/a\u003e / \u003ca href=\"https://docs.swift.org/swift-book/\" title=\"https://docs.swift.org/swift-book/\"\u003e\u003cspan\u003ehttps://docs.swift.org/swift-book/\u003c/span\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://books.apple.com/pl/book/app-development-with-swift/id1219117996\" title=\"https://books.apple.com/pl/book/app-development-with-swift/id1219117996\"\u003e\u003cspan\u003e‎App Development with Swift\u003c/span\u003e\u003c/a\u003e (Interactive book with a lot of useful informations)\u003c/p\u003e\u003cp\u003eIn this document you will find page numbers e.g. (p. 1) next to a specific topic. Those pages are from \u003ca href=\"https://books.apple.com/pl/book/app-development-with-swift/id1219117996\" title=\"https://books.apple.com/pl/book/app-development-with-swift/id1219117996\"\u003e\u003cspan\u003e‎App Development with Swift\u003c/span\u003e\u003c/a\u003e where you can find more information about the subject.\u003c/p\u003e","structured_body":{"blocks":[{"key":"f7plo","text":"Books worth to read if you want to develop iOS apps.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dctkt","text":"‎The Swift Programming Language (Swift 5.3) / https://docs.swift.org/swift-book/","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":1,"length":42,"style":"UNDERLINE"},{"offset":46,"length":34,"style":"UNDERLINE"}],"entityRanges":[{"offset":1,"length":42,"key":0},{"offset":46,"length":34,"key":1}],"data":{}},{"key":"hk3r","text":"‎App Development with Swift (Interactive book with a lot of useful informations)","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":27,"style":"UNDERLINE"}],"entityRanges":[{"offset":0,"length":27,"key":2}],"data":{}},{"key":"5ijl9","text":"In this document you will find page numbers e.g. (p. 1) next to a specific topic. Those pages are from ‎App Development with Swift where you can find more information about the subject.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":103,"length":27,"style":"UNDERLINE"}],"entityRanges":[{"offset":103,"length":27,"key":3}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://books.apple.com/pl/book/the-swift-programming-language-swift-5-3/id881256329","title":"https://books.apple.com/pl/book/the-swift-programming-language-swift-5-3/id881256329","url":"https://books.apple.com/pl/book/the-swift-programming-language-swift-5-3/id881256329"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://docs.swift.org/swift-book/","title":"https://docs.swift.org/swift-book/","url":"https://docs.swift.org/swift-book/"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://books.apple.com/pl/book/app-development-with-swift/id1219117996","title":"https://books.apple.com/pl/book/app-development-with-swift/id1219117996","url":"https://books.apple.com/pl/book/app-development-with-swift/id1219117996"}},"3":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://books.apple.com/pl/book/app-development-with-swift/id1219117996","title":"https://books.apple.com/pl/book/app-development-with-swift/id1219117996","url":"https://books.apple.com/pl/book/app-development-with-swift/id1219117996"}}}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-03-31T15:58:26.904+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1314,"position":6,"new_position":6,"published_attributes":{"type":"slide","answers":[],"title":"Project","body":null,"serialized_body":"\u003cp\u003eEverything you need for practicing your knowledge you can find at \u003c/p\u003e\u003cul\u003e\u003cli\u003eTasks which should be done after each part along \u003c/li\u003e\u003cli\u003e\u003ca href=\"https://github.com/netguru/ios-academy\" title=\"https://github.com/netguru/ios-academy\"\u003e\u003cspan\u003eiOS Academy Repo\u003c/span\u003e\u003c/a\u003e with git flow description to track your progress.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003c/p\u003e","structured_body":{"blocks":[{"key":"51qem","text":"Everything you need for practicing your knowledge you can find at ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2gh00","text":"Tasks which should be done after each part along ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ciqvc","text":"iOS Academy Repo with git flow description to track your progress.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":16,"style":"UNDERLINE"}],"entityRanges":[{"offset":0,"length":16,"key":0}],"data":{}},{"key":"etd6g","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/netguru/ios-academy","title":"https://github.com/netguru/ios-academy","url":"https://github.com/netguru/ios-academy"}}}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Project","body":null,"serialized_body":"\u003cp\u003eEverything you need for practicing your knowledge you can find at \u003c/p\u003e\u003cul\u003e\u003cli\u003eTasks which should be done after each part along \u003c/li\u003e\u003cli\u003e\u003ca href=\"https://github.com/netguru/ios-academy\" title=\"https://github.com/netguru/ios-academy\"\u003e\u003cspan\u003eiOS Academy Repo\u003c/span\u003e\u003c/a\u003e with git flow description to track your progress.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e\u003c/p\u003e","structured_body":{"blocks":[{"key":"51qem","text":"Everything you need for practicing your knowledge you can find at ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2gh00","text":"Tasks which should be done after each part along ","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ciqvc","text":"iOS Academy Repo with git flow description to track your progress.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":16,"style":"UNDERLINE"}],"entityRanges":[{"offset":0,"length":16,"key":0}],"data":{}},{"key":"etd6g","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://github.com/netguru/ios-academy","title":"https://github.com/netguru/ios-academy","url":"https://github.com/netguru/ios-academy"}}}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-03-31T15:58:26.904+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1315,"position":7,"new_position":7,"published_attributes":{"type":"slide","answers":[],"title":"Lectures \u0026 Resources","body":null,"serialized_body":"\u003cp\u003eMost videos / links / docs are based on Storyboards which are not preferred in the iOS world so every view should be done programmatically. Anyway it will give you a good insight about what you could do with those views / controls because it can be done programmatically as well. \u003cstrong\u003e\u003cspan\u003eWatching lectures is optional. You can learn from resources linked to subjects.\u003c/span\u003e\u003c/strong\u003e\u003c/p\u003e","structured_body":{"blocks":[{"key":"2nib9","text":"Most videos / links / docs are based on Storyboards which are not preferred in the iOS world so every view should be done programmatically. Anyway it will give you a good insight about what you could do with those views / controls because it can be done programmatically as well. Watching lectures is optional. You can learn from resources linked to subjects.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":280,"length":79,"style":"BOLD"},{"offset":280,"length":79,"style":"UNDERLINE"}],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Lectures \u0026 Resources","body":null,"serialized_body":"\u003cp\u003eMost videos / links / docs are based on Storyboards which are not preferred in the iOS world so every view should be done programmatically. Anyway it will give you a good insight about what you could do with those views / controls because it can be done programmatically as well. \u003cstrong\u003e\u003cspan\u003eWatching lectures is optional. You can learn from resources linked to subjects.\u003c/span\u003e\u003c/strong\u003e\u003c/p\u003e","structured_body":{"blocks":[{"key":"2nib9","text":"Most videos / links / docs are based on Storyboards which are not preferred in the iOS world so every view should be done programmatically. Anyway it will give you a good insight about what you could do with those views / controls because it can be done programmatically as well. Watching lectures is optional. You can learn from resources linked to subjects.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":280,"length":79,"style":"BOLD"},{"offset":280,"length":79,"style":"UNDERLINE"}],"entityRanges":[],"data":{}}],"entityMap":{}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-03-31T15:58:26.904+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]},{"id":1316,"position":8,"new_position":8,"published_attributes":{"type":"slide","answers":[],"title":"Preconditions","body":null,"serialized_body":"\u003cp\u003eIn order to successfully accomplish the course it’s necessary that you install the following tools: \u003c/p\u003e\u003col\u003e\u003cli\u003e\u003ca href=\"https://developer.apple.com/download/release/\" title=\"https://developer.apple.com/download/release/\"\u003e\u003cspan\u003eXcode\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://cocoapods.org/\" title=\"https://cocoapods.org/\"\u003e\u003cspan\u003eCocoapods\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e\u003c/ol\u003e","structured_body":{"blocks":[{"key":"asj2p","text":"In order to successfully accomplish the course it’s necessary that you install the following tools: ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"agq","text":"Xcode","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":5,"style":"UNDERLINE"}],"entityRanges":[{"offset":0,"length":5,"key":0}],"data":{}},{"key":"ef56h","text":"Cocoapods","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":9,"style":"UNDERLINE"}],"entityRanges":[{"offset":0,"length":9,"key":1}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://developer.apple.com/download/release/","title":"https://developer.apple.com/download/release/","url":"https://developer.apple.com/download/release/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://cocoapods.org/","title":"https://cocoapods.org/","url":"https://cocoapods.org/"}}}},"feedback":null,"cover_slide_data":{}},"draft_attributes":{"type":"slide","answers":[],"title":"Preconditions","body":null,"serialized_body":"\u003cp\u003eIn order to successfully accomplish the course it’s necessary that you install the following tools: \u003c/p\u003e\u003col\u003e\u003cli\u003e\u003ca href=\"https://developer.apple.com/download/release/\" title=\"https://developer.apple.com/download/release/\"\u003e\u003cspan\u003eXcode\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://cocoapods.org/\" title=\"https://cocoapods.org/\"\u003e\u003cspan\u003eCocoapods\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e\u003c/ol\u003e","structured_body":{"blocks":[{"key":"asj2p","text":"In order to successfully accomplish the course it’s necessary that you install the following tools: ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"agq","text":"Xcode","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":5,"style":"UNDERLINE"}],"entityRanges":[{"offset":0,"length":5,"key":0}],"data":{}},{"key":"ef56h","text":"Cocoapods","type":"ordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":9,"style":"UNDERLINE"}],"entityRanges":[{"offset":0,"length":9,"key":1}],"data":{}}],"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://developer.apple.com/download/release/","title":"https://developer.apple.com/download/release/","url":"https://developer.apple.com/download/release/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"href":"https://cocoapods.org/","title":"https://cocoapods.org/","url":"https://cocoapods.org/"}}}},"feedback":null,"cover_slide_data":{}},"published_at":"2021-03-31T15:58:26.904+02:00","estimated_time":1,"attachments_count":0,"presentable":true,"external_id":null,"attachments":[]}],"attachments":[]}